.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Julian 3"
.TH Julian 3 "2015-09-02" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Julian \- Perl routines for Julian Day Number calculations.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Julian qw();
\&
\&  $jdn = time_jdn("2008\-08\-27 18:00");
\&  ($year, $month, $day, $hour, $minute, $sec) = jdn_time($jdn);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Julian module provides Perl functions to convert between the
Gregorian date format and the Astronomical Julian date.
.PP
It should be noted that if \fBAstro::Time\fR is available on your system,
you should use that instead. A lot of these routines were blatantly
copied from \fBAstro::Time\fR and.
.PP
The epoch of the Julian Day Number is 1200hrs \s-1UTC\s0, 24/11/4713 \s-1BC\s0.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
\&\fIEverything is exported by default\fR.
.IP "jdn" 4
.IX Item "jdn"
.PD 0
.IP "date" 4
.IX Item "date"
.IP "split_date" 4
.IX Item "split_date"
.PD
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
\fIjdn\fR
.IX Subsection "jdn"
.PP
.Vb 1
\&        my $jdn = jdn("2008/08/12 18:00");
.Ve
.PP
Calculates the Julian Day Number from a given Gregorian date. If no date
is given the Julian Day Number for the current time is returned.
.PP
\fIdate\fR
.IX Subsection "date"
.PP
.Vb 1
\&        my ($year, $month, $day, $hour, $min, $sec) = date($jdn);
.Ve
.PP
Calculates the Gregorian date from a given Julian Day Number.
.PP
\fIsplit_date\fR
.IX Subsection "split_date"
.PP
.Vb 1
\&        my ($year, $month, $day, $hour, $min, $sec) = split_date(2009081203);
.Ve
.PP
The function \fBsplit_date\fR will try and split the date specified into
the following fields:
.IP "\s-1YYYY\s0 Four digit year" 4
.IX Item "YYYY Four digit year"
.PD 0
.IP "\s-1MM\s0 Two digit month" 4
.IX Item "MM Two digit month"
.IP "\s-1DD\s0 Two digit day" 4
.IX Item "DD Two digit day"
.IP "\s-1HH\s0 Two digit hour" 4
.IX Item "HH Two digit hour"
.IP "mm Two digit minute" 4
.IX Item "mm Two digit minute"
.IP "ss Two digit seconds" 4
.IX Item "ss Two digit seconds"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl (1),
\&\s-1DTC\s0 <http://www.dtcenter.org/>,
\&\s-1HWRF\s0 <http://www.dtcenter.org/HurrWRF/users/index.php>
.SH "AUTHOR"
.IX Header "AUTHOR"
Timothy P Brown, <Timothy.P.Brown@noaa.gov>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2011 by Timothy P Brown
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 82:" 4
.IX Item "Around line 82:"
You forgot a '=back' before '=head2'
