.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HWRF::Workflow 3"
.TH HWRF::Workflow 3 "2015-09-02" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HWRF::Workflow \- Perl extensions for the HWRF Workflow Manager.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use HWRF::Workflow;
\&  my $mgr = HWRF::Workflow\->new();
\&  $mgr\->xml();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBHWRF::Workflow\fR module provides Perl functions for the Workflow
Manager.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
None by default.
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
\fInew\fR
.IX Subsection "new"
.PP
\fIxml\fR
.IX Subsection "xml"
.PP
.Vb 1
\&        $mgr\->xml(file => $filename, store => $store);
.Ve
.PP
The function \fBxml\fR sets the Workflow Managers \s-1XML\s0 file and optional
store file.
.PP
If the store file is not specified a \*(L".store\*(R" is appended to the xml
filename.
.PP
\fIsite\fR
.IX Subsection "site"
.PP
.Vb 1
\&        $mgr\->site();
.Ve
.PP
The function \fBsite\fR will update the Workflow Managers site
specific entities.
.PP
\fIstorm\fR
.IX Subsection "storm"
.PP
.Vb 1
\&        $mgr\->storm();
.Ve
.PP
The function \fBstorm\fR will update the Workflow Managers storm
specific entities.
.PP
\fIforecast\fR
.IX Subsection "forecast"
.PP
.Vb 1
\&        $mgr\->forecast();
.Ve
.PP
The function \fBforecast\fR will update the Workflow Managers forecast
specific entities.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        $mgr\->io(format => "netcdf");
.Ve
.PP
The function \fBio\fR will update the Workflow Managers \s-1IO\s0 method for
\&\s-1WPS\s0, \s-1WRF\s0, \s-1WPP\s0 and \s-1UPP\s0.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        $mgr\->coupled(coupled => "true");
.Ve
.PP
The function \fBcoupled\fR will update the Workflow Managers \s-1COUPLED\s0
entity. To indicate if \s-1HWRF\s0 should run the coupler to an ocean model.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        ($year, $month, $day, $hours, $minute) = $mgr\->start_time(200808251200);
.Ve
.PP
The function \fBstart_time\fR will set the simulation start time.
It will call \fBJulian::split_date\fR to parse the date format.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        $mgr\->cycle(cycle => "true");
.Ve
.PP
The function \fBcycle\fR will update the Workflow Managers \s-1CYCLE\s0
entity. To indicate if \s-1HWRF\s0 should run as a cycled storm or as a
cold start.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        @times = $mgr\->cycle_times();
.Ve
.PP
The function \fBcycle_times\fR will return a list of all the start times if
cycling is enabled.
.PP
That is it will start from \fBstart_time\fR and increase in forecast increments
till the end of the forecast interval.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        $mgr\->vortex(init => "true");
.Ve
.PP
The function \fBvortex\fR will update the Workflow Managers \s-1VORTEX_INIT\s0
entity. To indicate if \s-1HWRF\s0 should run a vortex initialization stage.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        $mgr\->write_xml();
.Ve
.PP
The function \fBwrite_xml\fR will update the Workflow Managers \s-1XML\s0 with
all the currently defined entities.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 2
\&        $mgr\->exe(file => "workflowmgr/workflowmgr.rb",
\&                  frequency => 180);
.Ve
.PP
The function \fBexe\fR sets the path to the workflow manager executable
and frequency to execute it when \fBrun\fR is called.
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 1
\&        $mgr\->run();
.Ve
.PP
The function \fBrun\fR will run the workflow manger in a continuous
loop.
.PP
It will
.PP
\fI\fR
.IX Subsection ""
.PP
.Vb 4
\&        $mgr\->create_result(dir   => "messages",
\&                            file  => "go",
\&                            wait  => 60,
\&                            tries => 5)
.Ve
.PP
The function \fBcreate_result\fR will create/touch a result file.
.PP
It was written to create the \*(L"messages/go\*(R" file for the first cycle.
So these are the defaults.
.PP
This should be called after the first workflow manager iteration has
occurred. As the workflow manager will move the directory out of the
way if it exists prior to it running.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl (1),
\&\s-1DTC\s0 <http://www.dtcenter.org/>,
\&\s-1HWRF\s0 <http://www.dtcenter.org/HurrWRF/users/index.php>,
Workflow Manager
<https://intranet.fsl.noaa.gov/twiki/bin/view/WorkflowMgr/WebHome>,
.SH "AUTHOR"
.IX Header "AUTHOR"
Timothy P Brown, <Timothy.P.Brown@noaa.gov>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2011 by Timothy P Brown
