
SHELL           	=       /bin/sh

# Listing of options that are usually independent of machine type.
# When necessary, these are over-ridden by each architecture.

ARFLAGS			=	-X64

#### Architecture specific settings ####

# Settings for Linux x86_64, Intel compiler	 (dmpar)#
NETCDF         =   /apps/netcdf/4.2.1.1-intel
NETCDFINC      =   -I/apps/netcdf/4.2.1.1-intel/include
NETCDFLIB      =   -L/apps/netcdf/4.2.1.1-intel/lib -lnetcdf -lnetcdff -I/apps/netcdf/4.2.1.1-intel/include
PNETCDF        =   /apps/pnetcdf/1.5.0-intel-mvapich2-1.8
LDFLAGS        =   -Wl,-noinhibit-exec -shared-intel

LIB_W3_PATH    =   /mnt/lfs3/projects/hwrfv3/Keren.Rosado/H215_LPI/sorc/hwrf-utilities/libs
LIB_SP_PATH    =   /mnt/lfs3/projects/hwrfv3/Keren.Rosado/H215_LPI/sorc/hwrf-utilities/libs
LIB_SFCIO_PATH =   /mnt/lfs3/projects/hwrfv3/Keren.Rosado/H215_LPI/sorc/hwrf-utilities/libs
LIB_BLAS_PATH  =   /mnt/lfs3/projects/hwrfv3/Keren.Rosado/H215_LPI/sorc/hwrf-utilities/libs
BYTE_ORDER     =   LITTLE_ENDIAN
SFC            =   ifort
SF90           =   ifort -free
SCC            =   icc
OMP_FFLAGS     =   -openmp
FFLAGS         =   -O2 -fp-model precise -assume byterecl \
                   -convert big_endian # $(DEBUG_FFLAGS)
FFLAGS_MPI_POM =   -O1 -fp-model precise                  \
                   # $(DEBUG_FFLAGS)
DEBUG_FFLAGS   =   -g -traceback -ftz -fpe0
CPP            =   /lib/cpp 
CPPFLAGS       =   -C -P -D$(BYTE_ORDER) -DWRF

DM_FC          =   mpif90 -f90=$(SFC)
DM_F90         =   mpif90 -f90=$(SFC) -free 
DM_CC          =   cc

FC             =   $(DM_FC)
F90            =   $(DM_F90)
CC             =   $(DM_CC)

CFLAGS         =  

ESSLLIB        = -L$(LIB_BLAS_PATH) -lblas
MATHLIB        = -lm

###########################################################
#
#	Macros, these should be generic for all machines

LN		=	ln -sf
MAKE		=	make -i -r
RM		= 	/bin/rm -f
CP		= 	/bin/cp
AR		=	ar 
MKDIR           =       /bin/mkdir -p


.IGNORE:
.SUFFIXES: .c .f .F .F90 .f90 .o

#	There is probably no reason to modify these rules

.c.o:
	$(RM) $@
	$(CC) $(CFLAGS2) -c $<	

.f.o:
	$(RM) $@ $*.mod
	$(FC) $(FFLAGS) -c $< 

.F.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPPFLAGS) $(FDEFS)  $< > $*.f90
	$(F90) $(FFLAGS) -c $*.f90 
	$(RM) $*.f90

.F90.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPPFLAGS) $(FDEFS)  $< > $*.f90
	$(F90) $(FFLAGS) -c $*.f90 
	$(RM) $*.f90

.f90.o:
	$(RM) $@ $*.mod
	$(F90) $(FFLAGS) -c $< 
