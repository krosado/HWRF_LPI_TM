# Machine generated, do not edit

FILE=${1:-namelist.input}

echo \&physics >> $FILE
if test ! -z "$NL_LAKEDEPTH_DEFAULT"; then echo "lakedepth_default=${NL_LAKEDEPTH_DEFAULT}," >> $FILE;fi
if test ! -z "$NL_LAKE_MIN_ELEV"; then echo "lake_min_elev=${NL_LAKE_MIN_ELEV}," >> $FILE;fi
if test ! -z "$NL_USE_LAKEDEPTH"; then echo "use_lakedepth=${NL_USE_LAKEDEPTH}," >> $FILE;fi
if test ! -z "$NL_NTRACERS"; then echo "ntracers=${NL_NTRACERS}," >> $FILE;fi
if test ! -z "$NL_VORTEX_TRACKER"; then echo "vortex_tracker=${NL_VORTEX_TRACKER}," >> $FILE;fi
if test ! -z "$NL_INTEREST_RAD_STORM"; then echo "interest_rad_storm=${NL_INTEREST_RAD_STORM}," >> $FILE;fi
if test ! -z "$NL_INTEREST_RAD_PARENT"; then echo "interest_rad_parent=${NL_INTEREST_RAD_PARENT}," >> $FILE;fi
if test ! -z "$NL_INTEREST_RAD_SELF"; then echo "interest_rad_self=${NL_INTEREST_RAD_SELF}," >> $FILE;fi
if test ! -z "$NL_INTEREST_KIDS"; then echo "interest_kids=${NL_INTEREST_KIDS}," >> $FILE;fi
if test ! -z "$NL_INTEREST_SELF"; then echo "interest_self=${NL_INTEREST_SELF}," >> $FILE;fi
if test ! -z "$NL_INTEREST_STORMS"; then echo "interest_storms=${NL_INTEREST_STORMS}," >> $FILE;fi
if test ! -z "$NL_SWATH_MODE"; then echo "swath_mode=${NL_SWATH_MODE}," >> $FILE;fi
if test ! -z "$NL_NUM_OLD_FIXES"; then echo "num_old_fixes=${NL_NUM_OLD_FIXES}," >> $FILE;fi
if test ! -z "$NL_VT4_RADIUS"; then echo "vt4_radius=${NL_VT4_RADIUS}," >> $FILE;fi
if test ! -z "$NL_VT4_WEIGHTEXP"; then echo "vt4_weightexp=${NL_VT4_WEIGHTEXP}," >> $FILE;fi
if test ! -z "$NL_VT4_PMAX"; then echo "vt4_pmax=${NL_VT4_PMAX}," >> $FILE;fi
if test ! -z "$NL_VT4_NOISE_PMAX"; then echo "vt4_noise_pmax=${NL_VT4_NOISE_PMAX}," >> $FILE;fi
if test ! -z "$NL_VT4_NOISE_PMIN"; then echo "vt4_noise_pmin=${NL_VT4_NOISE_PMIN}," >> $FILE;fi
if test ! -z "$NL_VT4_NOISE_DPDR"; then echo "vt4_noise_dpdr=${NL_VT4_NOISE_DPDR}," >> $FILE;fi
if test ! -z "$NL_VT4_NOISE_ITER"; then echo "vt4_noise_iter=${NL_VT4_NOISE_ITER}," >> $FILE;fi
if test ! -z "$NL_NOMOVE_FREQ"; then echo "nomove_freq=${NL_NOMOVE_FREQ}," >> $FILE;fi
if test ! -z "$NL_TG_OPTION"; then echo "tg_option=${NL_TG_OPTION}," >> $FILE;fi
if test ! -z "$NL_NTORNADO"; then echo "ntornado=${NL_NTORNADO}," >> $FILE;fi
if test ! -z "$NL_SWINT_OPT"; then echo "swint_opt=${NL_SWINT_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_TYPE"; then echo "aer_type=${NL_AER_TYPE}," >> $FILE;fi
if test ! -z "$NL_AER_AOD550_OPT"; then echo "aer_aod550_opt=${NL_AER_AOD550_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_ANGEXP_OPT"; then echo "aer_angexp_opt=${NL_AER_ANGEXP_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_SSA_OPT"; then echo "aer_ssa_opt=${NL_AER_SSA_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_ASY_OPT"; then echo "aer_asy_opt=${NL_AER_ASY_OPT}," >> $FILE;fi
if test ! -z "$NL_AER_AOD550_VAL"; then echo "aer_aod550_val=${NL_AER_AOD550_VAL}," >> $FILE;fi
if test ! -z "$NL_AER_ANGEXP_VAL"; then echo "aer_angexp_val=${NL_AER_ANGEXP_VAL}," >> $FILE;fi
if test ! -z "$NL_AER_SSA_VAL"; then echo "aer_ssa_val=${NL_AER_SSA_VAL}," >> $FILE;fi
if test ! -z "$NL_AER_ASY_VAL"; then echo "aer_asy_val=${NL_AER_ASY_VAL}," >> $FILE;fi
if test ! -z "$NL_FORCE_READ_THOMPSON"; then echo "force_read_thompson=${NL_FORCE_READ_THOMPSON}," >> $FILE;fi
if test ! -z "$NL_WRITE_THOMPSON_TABLES"; then echo "write_thompson_tables=${NL_WRITE_THOMPSON_TABLES}," >> $FILE;fi
if test ! -z "$NL_MP_PHYSICS"; then echo "mp_physics=${NL_MP_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_MOMMIX"; then echo "mommix=${NL_MOMMIX}," >> $FILE;fi
if test ! -z "$NL_DISHEAT"; then echo "disheat=${NL_DISHEAT}," >> $FILE;fi
if test ! -z "$NL_DO_RADAR_REF"; then echo "do_radar_ref=${NL_DO_RADAR_REF}," >> $FILE;fi
if test ! -z "$NL_RA_LW_PHYSICS"; then echo "ra_lw_physics=${NL_RA_LW_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_RA_SW_PHYSICS"; then echo "ra_sw_physics=${NL_RA_SW_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_RADT"; then echo "radt=${NL_RADT}," >> $FILE;fi
if test ! -z "$NL_SF_SFCLAY_PHYSICS"; then echo "sf_sfclay_physics=${NL_SF_SFCLAY_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_SF_SURFACE_PHYSICS"; then echo "sf_surface_physics=${NL_SF_SURFACE_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_BL_PBL_PHYSICS"; then echo "bl_pbl_physics=${NL_BL_PBL_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_YSU_TOPDOWN_PBLMIX"; then echo "ysu_topdown_pblmix=${NL_YSU_TOPDOWN_PBLMIX}," >> $FILE;fi
if test ! -z "$NL_SHINHONG_TKE_DIAG"; then echo "shinhong_tke_diag=${NL_SHINHONG_TKE_DIAG}," >> $FILE;fi
if test ! -z "$NL_WINDFARM_OPT"; then echo "windfarm_opt=${NL_WINDFARM_OPT}," >> $FILE;fi
if test ! -z "$NL_WINDFARM_IJ"; then echo "windfarm_ij=${NL_WINDFARM_IJ}," >> $FILE;fi
if test ! -z "$NL_MFSHCONV"; then echo "mfshconv=${NL_MFSHCONV}," >> $FILE;fi
if test ! -z "$NL_BLDT"; then echo "bldt=${NL_BLDT}," >> $FILE;fi
if test ! -z "$NL_CU_PHYSICS"; then echo "cu_physics=${NL_CU_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_SHCU_PHYSICS"; then echo "shcu_physics=${NL_SHCU_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_CU_DIAG"; then echo "cu_diag=${NL_CU_DIAG}," >> $FILE;fi
if test ! -z "$NL_GFS_ALPHA"; then echo "gfs_alpha=${NL_GFS_ALPHA}," >> $FILE;fi
if test ! -z "$NL_CUDT"; then echo "cudt=${NL_CUDT}," >> $FILE;fi
if test ! -z "$NL_GSMDT"; then echo "gsmdt=${NL_GSMDT}," >> $FILE;fi
if test ! -z "$NL_ISFFLX"; then echo "isfflx=${NL_ISFFLX}," >> $FILE;fi
if test ! -z "$NL_IDEAL_XLAND"; then echo "ideal_xland=${NL_IDEAL_XLAND}," >> $FILE;fi
if test ! -z "$NL_IFSNOW"; then echo "ifsnow=${NL_IFSNOW}," >> $FILE;fi
if test ! -z "$NL_ICLOUD"; then echo "icloud=${NL_ICLOUD}," >> $FILE;fi
if test ! -z "$NL_SWRAD_SCAT"; then echo "swrad_scat=${NL_SWRAD_SCAT}," >> $FILE;fi
if test ! -z "$NL_SURFACE_INPUT_SOURCE"; then echo "surface_input_source=${NL_SURFACE_INPUT_SOURCE}," >> $FILE;fi
if test ! -z "$NL_NUM_SOIL_LAYERS"; then echo "num_soil_layers=${NL_NUM_SOIL_LAYERS}," >> $FILE;fi
if test ! -z "$NL_NUM_URBAN_LAYERS"; then echo "num_urban_layers=${NL_NUM_URBAN_LAYERS}," >> $FILE;fi
if test ! -z "$NL_SF_SURFACE_MOSAIC"; then echo "sf_surface_mosaic=${NL_SF_SURFACE_MOSAIC}," >> $FILE;fi
if test ! -z "$NL_MOSAIC_CAT"; then echo "mosaic_cat=${NL_MOSAIC_CAT}," >> $FILE;fi
if test ! -z "$NL_NUM_URBAN_HI"; then echo "num_urban_hi=${NL_NUM_URBAN_HI}," >> $FILE;fi
if test ! -z "$NL_MOSAIC_LU"; then echo "mosaic_lu=${NL_MOSAIC_LU}," >> $FILE;fi
if test ! -z "$NL_MOSAIC_SOIL"; then echo "mosaic_soil=${NL_MOSAIC_SOIL}," >> $FILE;fi
if test ! -z "$NL_MAXIENS"; then echo "maxiens=${NL_MAXIENS}," >> $FILE;fi
if test ! -z "$NL_MAXENS"; then echo "maxens=${NL_MAXENS}," >> $FILE;fi
if test ! -z "$NL_MAXENS2"; then echo "maxens2=${NL_MAXENS2}," >> $FILE;fi
if test ! -z "$NL_MAXENS3"; then echo "maxens3=${NL_MAXENS3}," >> $FILE;fi
if test ! -z "$NL_ENSDIM"; then echo "ensdim=${NL_ENSDIM}," >> $FILE;fi
if test ! -z "$NL_CHEM_OPT"; then echo "chem_opt=${NL_CHEM_OPT}," >> $FILE;fi
if test ! -z "$NL_NUM_LAND_CAT"; then echo "num_land_cat=${NL_NUM_LAND_CAT}," >> $FILE;fi
if test ! -z "$NL_NUM_SOIL_CAT"; then echo "num_soil_cat=${NL_NUM_SOIL_CAT}," >> $FILE;fi
if test ! -z "$NL_TOPO_WIND"; then echo "topo_wind=${NL_TOPO_WIND}," >> $FILE;fi
if test ! -z "$NL_MP_ZERO_OUT"; then echo "mp_zero_out=${NL_MP_ZERO_OUT}," >> $FILE;fi
if test ! -z "$NL_MP_ZERO_OUT_THRESH"; then echo "mp_zero_out_thresh=${NL_MP_ZERO_OUT_THRESH}," >> $FILE;fi
if test ! -z "$NL_SEAICE_THRESHOLD"; then echo "seaice_threshold=${NL_SEAICE_THRESHOLD}," >> $FILE;fi
if test ! -z "$NL_FRACTIONAL_SEAICE"; then echo "fractional_seaice=${NL_FRACTIONAL_SEAICE}," >> $FILE;fi
if test ! -z "$NL_SEAICE_ALBEDO_OPT"; then echo "seaice_albedo_opt=${NL_SEAICE_ALBEDO_OPT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_ALBEDO_DEFAULT"; then echo "seaice_albedo_default=${NL_SEAICE_ALBEDO_DEFAULT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_SNOWDEPTH_OPT"; then echo "seaice_snowdepth_opt=${NL_SEAICE_SNOWDEPTH_OPT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_SNOWDEPTH_MAX"; then echo "seaice_snowdepth_max=${NL_SEAICE_SNOWDEPTH_MAX}," >> $FILE;fi
if test ! -z "$NL_SEAICE_SNOWDEPTH_MIN"; then echo "seaice_snowdepth_min=${NL_SEAICE_SNOWDEPTH_MIN}," >> $FILE;fi
if test ! -z "$NL_SEAICE_THICKNESS_OPT"; then echo "seaice_thickness_opt=${NL_SEAICE_THICKNESS_OPT}," >> $FILE;fi
if test ! -z "$NL_SEAICE_THICKNESS_DEFAULT"; then echo "seaice_thickness_default=${NL_SEAICE_THICKNESS_DEFAULT}," >> $FILE;fi
if test ! -z "$NL_TICE2TSK_IF2COLD"; then echo "tice2tsk_if2cold=${NL_TICE2TSK_IF2COLD}," >> $FILE;fi
if test ! -z "$NL_SST_UPDATE"; then echo "sst_update=${NL_SST_UPDATE}," >> $FILE;fi
if test ! -z "$NL_SF_URBAN_PHYSICS"; then echo "sf_urban_physics=${NL_SF_URBAN_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_USEMONALB"; then echo "usemonalb=${NL_USEMONALB}," >> $FILE;fi
if test ! -z "$NL_RDMAXALB"; then echo "rdmaxalb=${NL_RDMAXALB}," >> $FILE;fi
if test ! -z "$NL_RDLAI2D"; then echo "rdlai2d=${NL_RDLAI2D}," >> $FILE;fi
if test ! -z "$NL_UA_PHYS"; then echo "ua_phys=${NL_UA_PHYS}," >> $FILE;fi
if test ! -z "$NL_GWD_OPT"; then echo "gwd_opt=${NL_GWD_OPT}," >> $FILE;fi
if test ! -z "$NL_IZ0TLND"; then echo "iz0tlnd=${NL_IZ0TLND}," >> $FILE;fi
if test ! -z "$NL_SAS_PGCON"; then echo "sas_pgcon=${NL_SAS_PGCON}," >> $FILE;fi
if test ! -z "$NL_SAS_SHAL_PGCON"; then echo "sas_shal_pgcon=${NL_SAS_SHAL_PGCON}," >> $FILE;fi
if test ! -z "$NL_SAS_SHAL_CONV"; then echo "sas_shal_conv=${NL_SAS_SHAL_CONV}," >> $FILE;fi
if test ! -z "$NL_SAS_MASS_FLUX"; then echo "sas_mass_flux=${NL_SAS_MASS_FLUX}," >> $FILE;fi
if test ! -z "$NL_VAR_RIC"; then echo "var_ric=${NL_VAR_RIC}," >> $FILE;fi
if test ! -z "$NL_COEF_RIC_L"; then echo "coef_ric_l=${NL_COEF_RIC_L}," >> $FILE;fi
if test ! -z "$NL_COEF_RIC_S"; then echo "coef_ric_s=${NL_COEF_RIC_S}," >> $FILE;fi
if test ! -z "$NL_RANDOM_SEED"; then echo "random_seed=${NL_RANDOM_SEED}," >> $FILE;fi
if test ! -z "$NL_ICOEF_SF"; then echo "icoef_sf=${NL_ICOEF_SF}," >> $FILE;fi
if test ! -z "$NL_LCURR_SF"; then echo "lcurr_sf=${NL_LCURR_SF}," >> $FILE;fi
if test ! -z "$NL_ENS_RANDOM_SEED"; then echo "ens_random_seed=${NL_ENS_RANDOM_SEED}," >> $FILE;fi
if test ! -z "$NL_PERT_SAS"; then echo "pert_sas=${NL_PERT_SAS}," >> $FILE;fi
if test ! -z "$NL_PERT_PBL"; then echo "pert_pbl=${NL_PERT_PBL}," >> $FILE;fi
if test ! -z "$NL_ENS_SASAMP"; then echo "ens_sasamp=${NL_ENS_SASAMP}," >> $FILE;fi
if test ! -z "$NL_ENS_PBLAMP"; then echo "ens_pblamp=${NL_ENS_PBLAMP}," >> $FILE;fi
if test ! -z "$NL_IDTAD"; then echo "idtad=${NL_IDTAD}," >> $FILE;fi
if test ! -z "$NL_NSOIL"; then echo "nsoil=${NL_NSOIL}," >> $FILE;fi
if test ! -z "$NL_NPHS"; then echo "nphs=${NL_NPHS}," >> $FILE;fi
if test ! -z "$NL_NCNVC"; then echo "ncnvc=${NL_NCNVC}," >> $FILE;fi
if test ! -z "$NL_NRAND"; then echo "nrand=${NL_NRAND}," >> $FILE;fi
if test ! -z "$NL_NRADS"; then echo "nrads=${NL_NRADS}," >> $FILE;fi
if test ! -z "$NL_NRADL"; then echo "nradl=${NL_NRADL}," >> $FILE;fi
if test ! -z "$NL_TPREC"; then echo "tprec=${NL_TPREC}," >> $FILE;fi
if test ! -z "$NL_THEAT"; then echo "theat=${NL_THEAT}," >> $FILE;fi
if test ! -z "$NL_TCLOD"; then echo "tclod=${NL_TCLOD}," >> $FILE;fi
if test ! -z "$NL_TRDSW"; then echo "trdsw=${NL_TRDSW}," >> $FILE;fi
if test ! -z "$NL_TRDLW"; then echo "trdlw=${NL_TRDLW}," >> $FILE;fi
if test ! -z "$NL_TSRFC"; then echo "tsrfc=${NL_TSRFC}," >> $FILE;fi
if test ! -z "$NL_PCPFLG"; then echo "pcpflg=${NL_PCPFLG}," >> $FILE;fi
if test ! -z "$NL_SIGMA"; then echo "sigma=${NL_SIGMA}," >> $FILE;fi
if test ! -z "$NL_SFENTH"; then echo "sfenth=${NL_SFENTH}," >> $FILE;fi
if test ! -z "$NL_CO2TF"; then echo "co2tf=${NL_CO2TF}," >> $FILE;fi
if test ! -z "$NL_RA_CALL_OFFSET"; then echo "ra_call_offset=${NL_RA_CALL_OFFSET}," >> $FILE;fi
if test ! -z "$NL_CAM_ABS_FREQ_S"; then echo "cam_abs_freq_s=${NL_CAM_ABS_FREQ_S}," >> $FILE;fi
if test ! -z "$NL_LEVSIZ"; then echo "levsiz=${NL_LEVSIZ}," >> $FILE;fi
if test ! -z "$NL_PAERLEV"; then echo "paerlev=${NL_PAERLEV}," >> $FILE;fi
if test ! -z "$NL_CAM_ABS_DIM1"; then echo "cam_abs_dim1=${NL_CAM_ABS_DIM1}," >> $FILE;fi
if test ! -z "$NL_CAM_ABS_DIM2"; then echo "cam_abs_dim2=${NL_CAM_ABS_DIM2}," >> $FILE;fi
if test ! -z "$NL_NO_SRC_TYPES"; then echo "no_src_types=${NL_NO_SRC_TYPES}," >> $FILE;fi
if test ! -z "$NL_ALEVSIZ"; then echo "alevsiz=${NL_ALEVSIZ}," >> $FILE;fi
if test ! -z "$NL_O3INPUT"; then echo "o3input=${NL_O3INPUT}," >> $FILE;fi
if test ! -z "$NL_AER_OPT"; then echo "aer_opt=${NL_AER_OPT}," >> $FILE;fi
if test ! -z "$NL_CU_RAD_FEEDBACK"; then echo "cu_rad_feedback=${NL_CU_RAD_FEEDBACK}," >> $FILE;fi
if test ! -z "$NL_H_DIFF"; then echo "h_diff=${NL_H_DIFF}," >> $FILE;fi
if test ! -z "$NL_MOVEMIN"; then echo "movemin=${NL_MOVEMIN}," >> $FILE;fi
if test ! -z "$NL_NUM_SNSO_LAYERS"; then echo "num_snso_layers=${NL_NUM_SNSO_LAYERS}," >> $FILE;fi
if test ! -z "$NL_NUM_SNOW_LAYERS"; then echo "num_snow_layers=${NL_NUM_SNOW_LAYERS}," >> $FILE;fi
if test ! -z "$NL_USE_AERO_ICBC"; then echo "use_aero_icbc=${NL_USE_AERO_ICBC}," >> $FILE;fi
if test ! -z "$NL_CCN_CONC"; then echo "ccn_conc=${NL_CCN_CONC}," >> $FILE;fi
if test ! -z "$NL_HAIL_OPT"; then echo "hail_opt=${NL_HAIL_OPT}," >> $FILE;fi
if test ! -z "$NL_SF_LAKE_PHYSICS"; then echo "sf_lake_physics=${NL_SF_LAKE_PHYSICS}," >> $FILE;fi
if test ! -z "$NL_MAXPATCH"; then echo "maxpatch=${NL_MAXPATCH}," >> $FILE;fi
echo / >> $FILE
echo \&domains >> $FILE
if test ! -z "$NL_HALO_DEBUG"; then echo "halo_debug=${NL_HALO_DEBUG}," >> $FILE;fi
if test ! -z "$NL_CORAL_X"; then echo "coral_x=${NL_CORAL_X}," >> $FILE;fi
if test ! -z "$NL_CORAL_Y"; then echo "coral_y=${NL_CORAL_Y}," >> $FILE;fi
if test ! -z "$NL_SR_X"; then echo "sr_x=${NL_SR_X}," >> $FILE;fi
if test ! -z "$NL_SR_Y"; then echo "sr_y=${NL_SR_Y}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP"; then echo "time_step=${NL_TIME_STEP}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_FRACT_NUM"; then echo "time_step_fract_num=${NL_TIME_STEP_FRACT_NUM}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_FRACT_DEN"; then echo "time_step_fract_den=${NL_TIME_STEP_FRACT_DEN}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_DFI"; then echo "time_step_dfi=${NL_TIME_STEP_DFI}," >> $FILE;fi
if test ! -z "$NL_MAX_DOM"; then echo "max_dom=${NL_MAX_DOM}," >> $FILE;fi
if test ! -z "$NL_S_WE"; then echo "s_we=${NL_S_WE}," >> $FILE;fi
if test ! -z "$NL_E_WE"; then echo "e_we=${NL_E_WE}," >> $FILE;fi
if test ! -z "$NL_S_SN"; then echo "s_sn=${NL_S_SN}," >> $FILE;fi
if test ! -z "$NL_E_SN"; then echo "e_sn=${NL_E_SN}," >> $FILE;fi
if test ! -z "$NL_S_VERT"; then echo "s_vert=${NL_S_VERT}," >> $FILE;fi
if test ! -z "$NL_E_VERT"; then echo "e_vert=${NL_E_VERT}," >> $FILE;fi
if test ! -z "$NL_NUM_METGRID_SOIL_LEVELS"; then echo "num_metgrid_soil_levels=${NL_NUM_METGRID_SOIL_LEVELS}," >> $FILE;fi
if test ! -z "$NL_DX"; then echo "dx=${NL_DX}," >> $FILE;fi
if test ! -z "$NL_DY"; then echo "dy=${NL_DY}," >> $FILE;fi
if test ! -z "$NL_GRID_ID"; then echo "grid_id=${NL_GRID_ID}," >> $FILE;fi
if test ! -z "$NL_GRID_ALLOWED"; then echo "grid_allowed=${NL_GRID_ALLOWED}," >> $FILE;fi
if test ! -z "$NL_PARENT_ID"; then echo "parent_id=${NL_PARENT_ID}," >> $FILE;fi
if test ! -z "$NL_I_PARENT_START"; then echo "i_parent_start=${NL_I_PARENT_START}," >> $FILE;fi
if test ! -z "$NL_J_PARENT_START"; then echo "j_parent_start=${NL_J_PARENT_START}," >> $FILE;fi
if test ! -z "$NL_PARENT_GRID_RATIO"; then echo "parent_grid_ratio=${NL_PARENT_GRID_RATIO}," >> $FILE;fi
if test ! -z "$NL_PARENT_TIME_STEP_RATIO"; then echo "parent_time_step_ratio=${NL_PARENT_TIME_STEP_RATIO}," >> $FILE;fi
if test ! -z "$NL_FEEDBACK"; then echo "feedback=${NL_FEEDBACK}," >> $FILE;fi
if test ! -z "$NL_SMOOTH_OPTION"; then echo "smooth_option=${NL_SMOOTH_OPTION}," >> $FILE;fi
if test ! -z "$NL_ZTOP"; then echo "ztop=${NL_ZTOP}," >> $FILE;fi
if test ! -z "$NL_MOAD_GRID_RATIO"; then echo "moad_grid_ratio=${NL_MOAD_GRID_RATIO}," >> $FILE;fi
if test ! -z "$NL_MOAD_TIME_STEP_RATIO"; then echo "moad_time_step_ratio=${NL_MOAD_TIME_STEP_RATIO}," >> $FILE;fi
if test ! -z "$NL_SHW"; then echo "shw=${NL_SHW}," >> $FILE;fi
if test ! -z "$NL_TILE_SZ_X"; then echo "tile_sz_x=${NL_TILE_SZ_X}," >> $FILE;fi
if test ! -z "$NL_TILE_SZ_Y"; then echo "tile_sz_y=${NL_TILE_SZ_Y}," >> $FILE;fi
if test ! -z "$NL_NUMTILES"; then echo "numtiles=${NL_NUMTILES}," >> $FILE;fi
if test ! -z "$NL_NUMTILES_INC"; then echo "numtiles_inc=${NL_NUMTILES_INC}," >> $FILE;fi
if test ! -z "$NL_NUMTILES_X"; then echo "numtiles_x=${NL_NUMTILES_X}," >> $FILE;fi
if test ! -z "$NL_NUMTILES_Y"; then echo "numtiles_y=${NL_NUMTILES_Y}," >> $FILE;fi
if test ! -z "$NL_TILE_STRATEGY"; then echo "tile_strategy=${NL_TILE_STRATEGY}," >> $FILE;fi
if test ! -z "$NL_NPROC_X"; then echo "nproc_x=${NL_NPROC_X}," >> $FILE;fi
if test ! -z "$NL_NPROC_Y"; then echo "nproc_y=${NL_NPROC_Y}," >> $FILE;fi
if test ! -z "$NL_IRAND"; then echo "irand=${NL_IRAND}," >> $FILE;fi
if test ! -z "$NL_TS_BUF_SIZE"; then echo "ts_buf_size=${NL_TS_BUF_SIZE}," >> $FILE;fi
if test ! -z "$NL_MAX_TS_LOCS"; then echo "max_ts_locs=${NL_MAX_TS_LOCS}," >> $FILE;fi
if test ! -z "$NL_NUM_MOVES"; then echo "num_moves=${NL_NUM_MOVES}," >> $FILE;fi
if test ! -z "$NL_VORTEX_INTERVAL"; then echo "vortex_interval=${NL_VORTEX_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_CORRAL_DIST"; then echo "corral_dist=${NL_CORRAL_DIST}," >> $FILE;fi
if test ! -z "$NL_MOVE_ID"; then echo "move_id=${NL_MOVE_ID}," >> $FILE;fi
if test ! -z "$NL_MOVE_INTERVAL"; then echo "move_interval=${NL_MOVE_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_MOVE_CD_X"; then echo "move_cd_x=${NL_MOVE_CD_X}," >> $FILE;fi
if test ! -z "$NL_MOVE_CD_Y"; then echo "move_cd_y=${NL_MOVE_CD_Y}," >> $FILE;fi
if test ! -z "$NL_SWAP_X"; then echo "swap_x=${NL_SWAP_X}," >> $FILE;fi
if test ! -z "$NL_SWAP_Y"; then echo "swap_y=${NL_SWAP_Y}," >> $FILE;fi
if test ! -z "$NL_CYCLE_X"; then echo "cycle_x=${NL_CYCLE_X}," >> $FILE;fi
if test ! -z "$NL_CYCLE_Y"; then echo "cycle_y=${NL_CYCLE_Y}," >> $FILE;fi
if test ! -z "$NL_REORDER_MESH"; then echo "reorder_mesh=${NL_REORDER_MESH}," >> $FILE;fi
if test ! -z "$NL_PERTURB_INPUT"; then echo "perturb_input=${NL_PERTURB_INPUT}," >> $FILE;fi
if test ! -z "$NL_ETA_LEVELS"; then echo "eta_levels=${NL_ETA_LEVELS}," >> $FILE;fi
if test ! -z "$NL_PTSGM"; then echo "ptsgm=${NL_PTSGM}," >> $FILE;fi
if test ! -z "$NL_NUM_METGRID_LEVELS"; then echo "num_metgrid_levels=${NL_NUM_METGRID_LEVELS}," >> $FILE;fi
if test ! -z "$NL_P_TOP_REQUESTED"; then echo "p_top_requested=${NL_P_TOP_REQUESTED}," >> $FILE;fi
if test ! -z "$NL_USE_PREP_HYBRID"; then echo "use_prep_hybrid=${NL_USE_PREP_HYBRID}," >> $FILE;fi
echo / >> $FILE
echo \&time_control >> $FILE
if test ! -z "$NL_TG_RESET_STREAM"; then echo "tg_reset_stream=${NL_TG_RESET_STREAM}," >> $FILE;fi
if test ! -z "$NL_ANALYSIS"; then echo "analysis=${NL_ANALYSIS}," >> $FILE;fi
if test ! -z "$NL_WRITE_ANALYSIS"; then echo "write_analysis=${NL_WRITE_ANALYSIS}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT2"; then echo "io_form_auxinput2=${NL_IO_FORM_AUXINPUT2}," >> $FILE;fi
if test ! -z "$NL_HIGH_FREQ"; then echo "high_freq=${NL_HIGH_FREQ}," >> $FILE;fi
if test ! -z "$NL_HIGH_DOM"; then echo "high_dom=${NL_HIGH_DOM}," >> $FILE;fi
if test ! -z "$NL_RUN_DAYS"; then echo "run_days=${NL_RUN_DAYS}," >> $FILE;fi
if test ! -z "$NL_RUN_HOURS"; then echo "run_hours=${NL_RUN_HOURS}," >> $FILE;fi
if test ! -z "$NL_RUN_MINUTES"; then echo "run_minutes=${NL_RUN_MINUTES}," >> $FILE;fi
if test ! -z "$NL_RUN_SECONDS"; then echo "run_seconds=${NL_RUN_SECONDS}," >> $FILE;fi
if test ! -z "$NL_START_YEAR"; then echo "start_year=${NL_START_YEAR}," >> $FILE;fi
if test ! -z "$NL_START_MONTH"; then echo "start_month=${NL_START_MONTH}," >> $FILE;fi
if test ! -z "$NL_START_DAY"; then echo "start_day=${NL_START_DAY}," >> $FILE;fi
if test ! -z "$NL_START_HOUR"; then echo "start_hour=${NL_START_HOUR}," >> $FILE;fi
if test ! -z "$NL_START_MINUTE"; then echo "start_minute=${NL_START_MINUTE}," >> $FILE;fi
if test ! -z "$NL_START_SECOND"; then echo "start_second=${NL_START_SECOND}," >> $FILE;fi
if test ! -z "$NL_END_YEAR"; then echo "end_year=${NL_END_YEAR}," >> $FILE;fi
if test ! -z "$NL_END_MONTH"; then echo "end_month=${NL_END_MONTH}," >> $FILE;fi
if test ! -z "$NL_END_DAY"; then echo "end_day=${NL_END_DAY}," >> $FILE;fi
if test ! -z "$NL_END_HOUR"; then echo "end_hour=${NL_END_HOUR}," >> $FILE;fi
if test ! -z "$NL_END_MINUTE"; then echo "end_minute=${NL_END_MINUTE}," >> $FILE;fi
if test ! -z "$NL_END_SECOND"; then echo "end_second=${NL_END_SECOND}," >> $FILE;fi
if test ! -z "$NL_INTERVAL_SECONDS"; then echo "interval_seconds=${NL_INTERVAL_SECONDS}," >> $FILE;fi
if test ! -z "$NL_INPUT_FROM_FILE"; then echo "input_from_file=${NL_INPUT_FROM_FILE}," >> $FILE;fi
if test ! -z "$NL_FINE_INPUT_STREAM"; then echo "fine_input_stream=${NL_FINE_INPUT_STREAM}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INNAME"; then echo "auxinput1_inname=\"${NL_AUXINPUT1_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT1"; then echo "io_form_auxinput1=${NL_IO_FORM_AUXINPUT1}," >> $FILE;fi
if test ! -z "$NL_OVERRIDE_RESTART_TIMERS"; then echo "override_restart_timers=${NL_OVERRIDE_RESTART_TIMERS}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INNAME"; then echo "auxhist1_inname=\"${NL_AUXHIST1_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_OUTNAME"; then echo "auxhist1_outname=\"${NL_AUXHIST1_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_Y"; then echo "auxhist1_interval_y=${NL_AUXHIST1_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_D"; then echo "auxhist1_interval_d=${NL_AUXHIST1_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_H"; then echo "auxhist1_interval_h=${NL_AUXHIST1_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_M"; then echo "auxhist1_interval_m=${NL_AUXHIST1_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL_S"; then echo "auxhist1_interval_s=${NL_AUXHIST1_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_INTERVAL"; then echo "auxhist1_interval=${NL_AUXHIST1_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_Y"; then echo "auxhist1_begin_y=${NL_AUXHIST1_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_D"; then echo "auxhist1_begin_d=${NL_AUXHIST1_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_H"; then echo "auxhist1_begin_h=${NL_AUXHIST1_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_M"; then echo "auxhist1_begin_m=${NL_AUXHIST1_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN_S"; then echo "auxhist1_begin_s=${NL_AUXHIST1_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_BEGIN"; then echo "auxhist1_begin=${NL_AUXHIST1_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_Y"; then echo "auxhist1_end_y=${NL_AUXHIST1_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_D"; then echo "auxhist1_end_d=${NL_AUXHIST1_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_H"; then echo "auxhist1_end_h=${NL_AUXHIST1_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_M"; then echo "auxhist1_end_m=${NL_AUXHIST1_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END_S"; then echo "auxhist1_end_s=${NL_AUXHIST1_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST1_END"; then echo "auxhist1_end=${NL_AUXHIST1_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST1"; then echo "io_form_auxhist1=${NL_IO_FORM_AUXHIST1}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST1"; then echo "frames_per_auxhist1=${NL_FRAMES_PER_AUXHIST1}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INNAME"; then echo "auxhist2_inname=\"${NL_AUXHIST2_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_OUTNAME"; then echo "auxhist2_outname=\"${NL_AUXHIST2_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_Y"; then echo "auxhist2_interval_y=${NL_AUXHIST2_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_D"; then echo "auxhist2_interval_d=${NL_AUXHIST2_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_H"; then echo "auxhist2_interval_h=${NL_AUXHIST2_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_M"; then echo "auxhist2_interval_m=${NL_AUXHIST2_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL_S"; then echo "auxhist2_interval_s=${NL_AUXHIST2_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_INTERVAL"; then echo "auxhist2_interval=${NL_AUXHIST2_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_Y"; then echo "auxhist2_begin_y=${NL_AUXHIST2_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_D"; then echo "auxhist2_begin_d=${NL_AUXHIST2_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_H"; then echo "auxhist2_begin_h=${NL_AUXHIST2_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_M"; then echo "auxhist2_begin_m=${NL_AUXHIST2_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN_S"; then echo "auxhist2_begin_s=${NL_AUXHIST2_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_BEGIN"; then echo "auxhist2_begin=${NL_AUXHIST2_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_Y"; then echo "auxhist2_end_y=${NL_AUXHIST2_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_D"; then echo "auxhist2_end_d=${NL_AUXHIST2_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_H"; then echo "auxhist2_end_h=${NL_AUXHIST2_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_M"; then echo "auxhist2_end_m=${NL_AUXHIST2_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END_S"; then echo "auxhist2_end_s=${NL_AUXHIST2_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST2_END"; then echo "auxhist2_end=${NL_AUXHIST2_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST2"; then echo "io_form_auxhist2=${NL_IO_FORM_AUXHIST2}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST2"; then echo "frames_per_auxhist2=${NL_FRAMES_PER_AUXHIST2}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INNAME"; then echo "auxhist3_inname=\"${NL_AUXHIST3_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_OUTNAME"; then echo "auxhist3_outname=\"${NL_AUXHIST3_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_Y"; then echo "auxhist3_interval_y=${NL_AUXHIST3_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_D"; then echo "auxhist3_interval_d=${NL_AUXHIST3_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_H"; then echo "auxhist3_interval_h=${NL_AUXHIST3_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_M"; then echo "auxhist3_interval_m=${NL_AUXHIST3_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL_S"; then echo "auxhist3_interval_s=${NL_AUXHIST3_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_INTERVAL"; then echo "auxhist3_interval=${NL_AUXHIST3_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_Y"; then echo "auxhist3_begin_y=${NL_AUXHIST3_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_D"; then echo "auxhist3_begin_d=${NL_AUXHIST3_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_H"; then echo "auxhist3_begin_h=${NL_AUXHIST3_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_M"; then echo "auxhist3_begin_m=${NL_AUXHIST3_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN_S"; then echo "auxhist3_begin_s=${NL_AUXHIST3_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_BEGIN"; then echo "auxhist3_begin=${NL_AUXHIST3_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_Y"; then echo "auxhist3_end_y=${NL_AUXHIST3_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_D"; then echo "auxhist3_end_d=${NL_AUXHIST3_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_H"; then echo "auxhist3_end_h=${NL_AUXHIST3_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_M"; then echo "auxhist3_end_m=${NL_AUXHIST3_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END_S"; then echo "auxhist3_end_s=${NL_AUXHIST3_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST3_END"; then echo "auxhist3_end=${NL_AUXHIST3_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST3"; then echo "io_form_auxhist3=${NL_IO_FORM_AUXHIST3}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST3"; then echo "frames_per_auxhist3=${NL_FRAMES_PER_AUXHIST3}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INNAME"; then echo "auxhist4_inname=\"${NL_AUXHIST4_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_OUTNAME"; then echo "auxhist4_outname=\"${NL_AUXHIST4_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_Y"; then echo "auxhist4_interval_y=${NL_AUXHIST4_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_D"; then echo "auxhist4_interval_d=${NL_AUXHIST4_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_H"; then echo "auxhist4_interval_h=${NL_AUXHIST4_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_M"; then echo "auxhist4_interval_m=${NL_AUXHIST4_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL_S"; then echo "auxhist4_interval_s=${NL_AUXHIST4_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_INTERVAL"; then echo "auxhist4_interval=${NL_AUXHIST4_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_Y"; then echo "auxhist4_begin_y=${NL_AUXHIST4_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_D"; then echo "auxhist4_begin_d=${NL_AUXHIST4_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_H"; then echo "auxhist4_begin_h=${NL_AUXHIST4_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_M"; then echo "auxhist4_begin_m=${NL_AUXHIST4_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN_S"; then echo "auxhist4_begin_s=${NL_AUXHIST4_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_BEGIN"; then echo "auxhist4_begin=${NL_AUXHIST4_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_Y"; then echo "auxhist4_end_y=${NL_AUXHIST4_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_D"; then echo "auxhist4_end_d=${NL_AUXHIST4_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_H"; then echo "auxhist4_end_h=${NL_AUXHIST4_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_M"; then echo "auxhist4_end_m=${NL_AUXHIST4_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END_S"; then echo "auxhist4_end_s=${NL_AUXHIST4_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST4_END"; then echo "auxhist4_end=${NL_AUXHIST4_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST4"; then echo "io_form_auxhist4=${NL_IO_FORM_AUXHIST4}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST4"; then echo "frames_per_auxhist4=${NL_FRAMES_PER_AUXHIST4}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INNAME"; then echo "auxhist5_inname=\"${NL_AUXHIST5_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_OUTNAME"; then echo "auxhist5_outname=\"${NL_AUXHIST5_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_Y"; then echo "auxhist5_interval_y=${NL_AUXHIST5_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_D"; then echo "auxhist5_interval_d=${NL_AUXHIST5_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_H"; then echo "auxhist5_interval_h=${NL_AUXHIST5_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_M"; then echo "auxhist5_interval_m=${NL_AUXHIST5_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL_S"; then echo "auxhist5_interval_s=${NL_AUXHIST5_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_INTERVAL"; then echo "auxhist5_interval=${NL_AUXHIST5_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_Y"; then echo "auxhist5_begin_y=${NL_AUXHIST5_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_D"; then echo "auxhist5_begin_d=${NL_AUXHIST5_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_H"; then echo "auxhist5_begin_h=${NL_AUXHIST5_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_M"; then echo "auxhist5_begin_m=${NL_AUXHIST5_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN_S"; then echo "auxhist5_begin_s=${NL_AUXHIST5_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_BEGIN"; then echo "auxhist5_begin=${NL_AUXHIST5_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_Y"; then echo "auxhist5_end_y=${NL_AUXHIST5_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_D"; then echo "auxhist5_end_d=${NL_AUXHIST5_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_H"; then echo "auxhist5_end_h=${NL_AUXHIST5_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_M"; then echo "auxhist5_end_m=${NL_AUXHIST5_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END_S"; then echo "auxhist5_end_s=${NL_AUXHIST5_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST5_END"; then echo "auxhist5_end=${NL_AUXHIST5_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST5"; then echo "io_form_auxhist5=${NL_IO_FORM_AUXHIST5}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST5"; then echo "frames_per_auxhist5=${NL_FRAMES_PER_AUXHIST5}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INNAME"; then echo "auxhist6_inname=\"${NL_AUXHIST6_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_OUTNAME"; then echo "auxhist6_outname=\"${NL_AUXHIST6_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_Y"; then echo "auxhist6_interval_y=${NL_AUXHIST6_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_D"; then echo "auxhist6_interval_d=${NL_AUXHIST6_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_H"; then echo "auxhist6_interval_h=${NL_AUXHIST6_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_M"; then echo "auxhist6_interval_m=${NL_AUXHIST6_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL_S"; then echo "auxhist6_interval_s=${NL_AUXHIST6_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_INTERVAL"; then echo "auxhist6_interval=${NL_AUXHIST6_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_Y"; then echo "auxhist6_begin_y=${NL_AUXHIST6_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_D"; then echo "auxhist6_begin_d=${NL_AUXHIST6_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_H"; then echo "auxhist6_begin_h=${NL_AUXHIST6_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_M"; then echo "auxhist6_begin_m=${NL_AUXHIST6_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN_S"; then echo "auxhist6_begin_s=${NL_AUXHIST6_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_BEGIN"; then echo "auxhist6_begin=${NL_AUXHIST6_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_Y"; then echo "auxhist6_end_y=${NL_AUXHIST6_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_D"; then echo "auxhist6_end_d=${NL_AUXHIST6_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_H"; then echo "auxhist6_end_h=${NL_AUXHIST6_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_M"; then echo "auxhist6_end_m=${NL_AUXHIST6_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END_S"; then echo "auxhist6_end_s=${NL_AUXHIST6_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST6_END"; then echo "auxhist6_end=${NL_AUXHIST6_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST6"; then echo "io_form_auxhist6=${NL_IO_FORM_AUXHIST6}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST6"; then echo "frames_per_auxhist6=${NL_FRAMES_PER_AUXHIST6}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INNAME"; then echo "auxhist7_inname=\"${NL_AUXHIST7_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_OUTNAME"; then echo "auxhist7_outname=\"${NL_AUXHIST7_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_Y"; then echo "auxhist7_interval_y=${NL_AUXHIST7_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_D"; then echo "auxhist7_interval_d=${NL_AUXHIST7_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_H"; then echo "auxhist7_interval_h=${NL_AUXHIST7_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_M"; then echo "auxhist7_interval_m=${NL_AUXHIST7_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL_S"; then echo "auxhist7_interval_s=${NL_AUXHIST7_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_INTERVAL"; then echo "auxhist7_interval=${NL_AUXHIST7_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_Y"; then echo "auxhist7_begin_y=${NL_AUXHIST7_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_D"; then echo "auxhist7_begin_d=${NL_AUXHIST7_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_H"; then echo "auxhist7_begin_h=${NL_AUXHIST7_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_M"; then echo "auxhist7_begin_m=${NL_AUXHIST7_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN_S"; then echo "auxhist7_begin_s=${NL_AUXHIST7_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_BEGIN"; then echo "auxhist7_begin=${NL_AUXHIST7_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_Y"; then echo "auxhist7_end_y=${NL_AUXHIST7_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_D"; then echo "auxhist7_end_d=${NL_AUXHIST7_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_H"; then echo "auxhist7_end_h=${NL_AUXHIST7_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_M"; then echo "auxhist7_end_m=${NL_AUXHIST7_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END_S"; then echo "auxhist7_end_s=${NL_AUXHIST7_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST7_END"; then echo "auxhist7_end=${NL_AUXHIST7_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST7"; then echo "io_form_auxhist7=${NL_IO_FORM_AUXHIST7}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST7"; then echo "frames_per_auxhist7=${NL_FRAMES_PER_AUXHIST7}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INNAME"; then echo "auxhist8_inname=\"${NL_AUXHIST8_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_OUTNAME"; then echo "auxhist8_outname=\"${NL_AUXHIST8_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_Y"; then echo "auxhist8_interval_y=${NL_AUXHIST8_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_D"; then echo "auxhist8_interval_d=${NL_AUXHIST8_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_H"; then echo "auxhist8_interval_h=${NL_AUXHIST8_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_M"; then echo "auxhist8_interval_m=${NL_AUXHIST8_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL_S"; then echo "auxhist8_interval_s=${NL_AUXHIST8_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_INTERVAL"; then echo "auxhist8_interval=${NL_AUXHIST8_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_Y"; then echo "auxhist8_begin_y=${NL_AUXHIST8_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_D"; then echo "auxhist8_begin_d=${NL_AUXHIST8_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_H"; then echo "auxhist8_begin_h=${NL_AUXHIST8_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_M"; then echo "auxhist8_begin_m=${NL_AUXHIST8_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN_S"; then echo "auxhist8_begin_s=${NL_AUXHIST8_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_BEGIN"; then echo "auxhist8_begin=${NL_AUXHIST8_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_Y"; then echo "auxhist8_end_y=${NL_AUXHIST8_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_D"; then echo "auxhist8_end_d=${NL_AUXHIST8_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_H"; then echo "auxhist8_end_h=${NL_AUXHIST8_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_M"; then echo "auxhist8_end_m=${NL_AUXHIST8_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END_S"; then echo "auxhist8_end_s=${NL_AUXHIST8_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST8_END"; then echo "auxhist8_end=${NL_AUXHIST8_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST8"; then echo "io_form_auxhist8=${NL_IO_FORM_AUXHIST8}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST8"; then echo "frames_per_auxhist8=${NL_FRAMES_PER_AUXHIST8}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INNAME"; then echo "auxhist9_inname=\"${NL_AUXHIST9_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_OUTNAME"; then echo "auxhist9_outname=\"${NL_AUXHIST9_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_Y"; then echo "auxhist9_interval_y=${NL_AUXHIST9_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_D"; then echo "auxhist9_interval_d=${NL_AUXHIST9_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_H"; then echo "auxhist9_interval_h=${NL_AUXHIST9_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_M"; then echo "auxhist9_interval_m=${NL_AUXHIST9_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL_S"; then echo "auxhist9_interval_s=${NL_AUXHIST9_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_INTERVAL"; then echo "auxhist9_interval=${NL_AUXHIST9_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_Y"; then echo "auxhist9_begin_y=${NL_AUXHIST9_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_D"; then echo "auxhist9_begin_d=${NL_AUXHIST9_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_H"; then echo "auxhist9_begin_h=${NL_AUXHIST9_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_M"; then echo "auxhist9_begin_m=${NL_AUXHIST9_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN_S"; then echo "auxhist9_begin_s=${NL_AUXHIST9_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_BEGIN"; then echo "auxhist9_begin=${NL_AUXHIST9_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_Y"; then echo "auxhist9_end_y=${NL_AUXHIST9_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_D"; then echo "auxhist9_end_d=${NL_AUXHIST9_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_H"; then echo "auxhist9_end_h=${NL_AUXHIST9_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_M"; then echo "auxhist9_end_m=${NL_AUXHIST9_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END_S"; then echo "auxhist9_end_s=${NL_AUXHIST9_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST9_END"; then echo "auxhist9_end=${NL_AUXHIST9_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST9"; then echo "io_form_auxhist9=${NL_IO_FORM_AUXHIST9}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST9"; then echo "frames_per_auxhist9=${NL_FRAMES_PER_AUXHIST9}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INNAME"; then echo "auxhist10_inname=\"${NL_AUXHIST10_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_OUTNAME"; then echo "auxhist10_outname=\"${NL_AUXHIST10_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_Y"; then echo "auxhist10_interval_y=${NL_AUXHIST10_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_D"; then echo "auxhist10_interval_d=${NL_AUXHIST10_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_H"; then echo "auxhist10_interval_h=${NL_AUXHIST10_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_M"; then echo "auxhist10_interval_m=${NL_AUXHIST10_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL_S"; then echo "auxhist10_interval_s=${NL_AUXHIST10_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_INTERVAL"; then echo "auxhist10_interval=${NL_AUXHIST10_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_Y"; then echo "auxhist10_begin_y=${NL_AUXHIST10_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_D"; then echo "auxhist10_begin_d=${NL_AUXHIST10_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_H"; then echo "auxhist10_begin_h=${NL_AUXHIST10_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_M"; then echo "auxhist10_begin_m=${NL_AUXHIST10_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN_S"; then echo "auxhist10_begin_s=${NL_AUXHIST10_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_BEGIN"; then echo "auxhist10_begin=${NL_AUXHIST10_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_Y"; then echo "auxhist10_end_y=${NL_AUXHIST10_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_D"; then echo "auxhist10_end_d=${NL_AUXHIST10_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_H"; then echo "auxhist10_end_h=${NL_AUXHIST10_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_M"; then echo "auxhist10_end_m=${NL_AUXHIST10_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END_S"; then echo "auxhist10_end_s=${NL_AUXHIST10_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST10_END"; then echo "auxhist10_end=${NL_AUXHIST10_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST10"; then echo "io_form_auxhist10=${NL_IO_FORM_AUXHIST10}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST10"; then echo "frames_per_auxhist10=${NL_FRAMES_PER_AUXHIST10}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INNAME"; then echo "auxhist11_inname=\"${NL_AUXHIST11_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_OUTNAME"; then echo "auxhist11_outname=\"${NL_AUXHIST11_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_Y"; then echo "auxhist11_interval_y=${NL_AUXHIST11_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_D"; then echo "auxhist11_interval_d=${NL_AUXHIST11_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_H"; then echo "auxhist11_interval_h=${NL_AUXHIST11_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_M"; then echo "auxhist11_interval_m=${NL_AUXHIST11_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL_S"; then echo "auxhist11_interval_s=${NL_AUXHIST11_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_INTERVAL"; then echo "auxhist11_interval=${NL_AUXHIST11_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_Y"; then echo "auxhist11_begin_y=${NL_AUXHIST11_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_D"; then echo "auxhist11_begin_d=${NL_AUXHIST11_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_H"; then echo "auxhist11_begin_h=${NL_AUXHIST11_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_M"; then echo "auxhist11_begin_m=${NL_AUXHIST11_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN_S"; then echo "auxhist11_begin_s=${NL_AUXHIST11_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_BEGIN"; then echo "auxhist11_begin=${NL_AUXHIST11_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_Y"; then echo "auxhist11_end_y=${NL_AUXHIST11_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_D"; then echo "auxhist11_end_d=${NL_AUXHIST11_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_H"; then echo "auxhist11_end_h=${NL_AUXHIST11_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_M"; then echo "auxhist11_end_m=${NL_AUXHIST11_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END_S"; then echo "auxhist11_end_s=${NL_AUXHIST11_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST11_END"; then echo "auxhist11_end=${NL_AUXHIST11_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST11"; then echo "io_form_auxhist11=${NL_IO_FORM_AUXHIST11}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST11"; then echo "frames_per_auxhist11=${NL_FRAMES_PER_AUXHIST11}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INNAME"; then echo "auxhist12_inname=\"${NL_AUXHIST12_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_OUTNAME"; then echo "auxhist12_outname=\"${NL_AUXHIST12_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_Y"; then echo "auxhist12_interval_y=${NL_AUXHIST12_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_D"; then echo "auxhist12_interval_d=${NL_AUXHIST12_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_H"; then echo "auxhist12_interval_h=${NL_AUXHIST12_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_M"; then echo "auxhist12_interval_m=${NL_AUXHIST12_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL_S"; then echo "auxhist12_interval_s=${NL_AUXHIST12_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_INTERVAL"; then echo "auxhist12_interval=${NL_AUXHIST12_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_Y"; then echo "auxhist12_begin_y=${NL_AUXHIST12_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_D"; then echo "auxhist12_begin_d=${NL_AUXHIST12_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_H"; then echo "auxhist12_begin_h=${NL_AUXHIST12_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_M"; then echo "auxhist12_begin_m=${NL_AUXHIST12_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN_S"; then echo "auxhist12_begin_s=${NL_AUXHIST12_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_BEGIN"; then echo "auxhist12_begin=${NL_AUXHIST12_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_Y"; then echo "auxhist12_end_y=${NL_AUXHIST12_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_D"; then echo "auxhist12_end_d=${NL_AUXHIST12_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_H"; then echo "auxhist12_end_h=${NL_AUXHIST12_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_M"; then echo "auxhist12_end_m=${NL_AUXHIST12_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END_S"; then echo "auxhist12_end_s=${NL_AUXHIST12_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST12_END"; then echo "auxhist12_end=${NL_AUXHIST12_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST12"; then echo "io_form_auxhist12=${NL_IO_FORM_AUXHIST12}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST12"; then echo "frames_per_auxhist12=${NL_FRAMES_PER_AUXHIST12}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INNAME"; then echo "auxhist13_inname=\"${NL_AUXHIST13_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_OUTNAME"; then echo "auxhist13_outname=\"${NL_AUXHIST13_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_Y"; then echo "auxhist13_interval_y=${NL_AUXHIST13_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_D"; then echo "auxhist13_interval_d=${NL_AUXHIST13_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_H"; then echo "auxhist13_interval_h=${NL_AUXHIST13_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_M"; then echo "auxhist13_interval_m=${NL_AUXHIST13_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL_S"; then echo "auxhist13_interval_s=${NL_AUXHIST13_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_INTERVAL"; then echo "auxhist13_interval=${NL_AUXHIST13_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_Y"; then echo "auxhist13_begin_y=${NL_AUXHIST13_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_D"; then echo "auxhist13_begin_d=${NL_AUXHIST13_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_H"; then echo "auxhist13_begin_h=${NL_AUXHIST13_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_M"; then echo "auxhist13_begin_m=${NL_AUXHIST13_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN_S"; then echo "auxhist13_begin_s=${NL_AUXHIST13_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_BEGIN"; then echo "auxhist13_begin=${NL_AUXHIST13_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_Y"; then echo "auxhist13_end_y=${NL_AUXHIST13_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_D"; then echo "auxhist13_end_d=${NL_AUXHIST13_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_H"; then echo "auxhist13_end_h=${NL_AUXHIST13_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_M"; then echo "auxhist13_end_m=${NL_AUXHIST13_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END_S"; then echo "auxhist13_end_s=${NL_AUXHIST13_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST13_END"; then echo "auxhist13_end=${NL_AUXHIST13_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST13"; then echo "io_form_auxhist13=${NL_IO_FORM_AUXHIST13}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST13"; then echo "frames_per_auxhist13=${NL_FRAMES_PER_AUXHIST13}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INNAME"; then echo "auxhist14_inname=\"${NL_AUXHIST14_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_OUTNAME"; then echo "auxhist14_outname=\"${NL_AUXHIST14_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_Y"; then echo "auxhist14_interval_y=${NL_AUXHIST14_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_D"; then echo "auxhist14_interval_d=${NL_AUXHIST14_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_H"; then echo "auxhist14_interval_h=${NL_AUXHIST14_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_M"; then echo "auxhist14_interval_m=${NL_AUXHIST14_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL_S"; then echo "auxhist14_interval_s=${NL_AUXHIST14_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_INTERVAL"; then echo "auxhist14_interval=${NL_AUXHIST14_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_Y"; then echo "auxhist14_begin_y=${NL_AUXHIST14_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_D"; then echo "auxhist14_begin_d=${NL_AUXHIST14_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_H"; then echo "auxhist14_begin_h=${NL_AUXHIST14_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_M"; then echo "auxhist14_begin_m=${NL_AUXHIST14_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN_S"; then echo "auxhist14_begin_s=${NL_AUXHIST14_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_BEGIN"; then echo "auxhist14_begin=${NL_AUXHIST14_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_Y"; then echo "auxhist14_end_y=${NL_AUXHIST14_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_D"; then echo "auxhist14_end_d=${NL_AUXHIST14_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_H"; then echo "auxhist14_end_h=${NL_AUXHIST14_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_M"; then echo "auxhist14_end_m=${NL_AUXHIST14_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END_S"; then echo "auxhist14_end_s=${NL_AUXHIST14_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST14_END"; then echo "auxhist14_end=${NL_AUXHIST14_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST14"; then echo "io_form_auxhist14=${NL_IO_FORM_AUXHIST14}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST14"; then echo "frames_per_auxhist14=${NL_FRAMES_PER_AUXHIST14}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INNAME"; then echo "auxhist15_inname=\"${NL_AUXHIST15_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_OUTNAME"; then echo "auxhist15_outname=\"${NL_AUXHIST15_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_Y"; then echo "auxhist15_interval_y=${NL_AUXHIST15_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_D"; then echo "auxhist15_interval_d=${NL_AUXHIST15_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_H"; then echo "auxhist15_interval_h=${NL_AUXHIST15_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_M"; then echo "auxhist15_interval_m=${NL_AUXHIST15_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL_S"; then echo "auxhist15_interval_s=${NL_AUXHIST15_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_INTERVAL"; then echo "auxhist15_interval=${NL_AUXHIST15_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_Y"; then echo "auxhist15_begin_y=${NL_AUXHIST15_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_D"; then echo "auxhist15_begin_d=${NL_AUXHIST15_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_H"; then echo "auxhist15_begin_h=${NL_AUXHIST15_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_M"; then echo "auxhist15_begin_m=${NL_AUXHIST15_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN_S"; then echo "auxhist15_begin_s=${NL_AUXHIST15_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_BEGIN"; then echo "auxhist15_begin=${NL_AUXHIST15_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_Y"; then echo "auxhist15_end_y=${NL_AUXHIST15_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_D"; then echo "auxhist15_end_d=${NL_AUXHIST15_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_H"; then echo "auxhist15_end_h=${NL_AUXHIST15_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_M"; then echo "auxhist15_end_m=${NL_AUXHIST15_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END_S"; then echo "auxhist15_end_s=${NL_AUXHIST15_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST15_END"; then echo "auxhist15_end=${NL_AUXHIST15_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST15"; then echo "io_form_auxhist15=${NL_IO_FORM_AUXHIST15}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST15"; then echo "frames_per_auxhist15=${NL_FRAMES_PER_AUXHIST15}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INNAME"; then echo "auxhist16_inname=\"${NL_AUXHIST16_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_OUTNAME"; then echo "auxhist16_outname=\"${NL_AUXHIST16_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_Y"; then echo "auxhist16_interval_y=${NL_AUXHIST16_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_D"; then echo "auxhist16_interval_d=${NL_AUXHIST16_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_H"; then echo "auxhist16_interval_h=${NL_AUXHIST16_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_M"; then echo "auxhist16_interval_m=${NL_AUXHIST16_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL_S"; then echo "auxhist16_interval_s=${NL_AUXHIST16_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_INTERVAL"; then echo "auxhist16_interval=${NL_AUXHIST16_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_Y"; then echo "auxhist16_begin_y=${NL_AUXHIST16_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_D"; then echo "auxhist16_begin_d=${NL_AUXHIST16_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_H"; then echo "auxhist16_begin_h=${NL_AUXHIST16_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_M"; then echo "auxhist16_begin_m=${NL_AUXHIST16_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN_S"; then echo "auxhist16_begin_s=${NL_AUXHIST16_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_BEGIN"; then echo "auxhist16_begin=${NL_AUXHIST16_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_Y"; then echo "auxhist16_end_y=${NL_AUXHIST16_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_D"; then echo "auxhist16_end_d=${NL_AUXHIST16_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_H"; then echo "auxhist16_end_h=${NL_AUXHIST16_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_M"; then echo "auxhist16_end_m=${NL_AUXHIST16_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END_S"; then echo "auxhist16_end_s=${NL_AUXHIST16_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST16_END"; then echo "auxhist16_end=${NL_AUXHIST16_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST16"; then echo "io_form_auxhist16=${NL_IO_FORM_AUXHIST16}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST16"; then echo "frames_per_auxhist16=${NL_FRAMES_PER_AUXHIST16}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INNAME"; then echo "auxhist17_inname=\"${NL_AUXHIST17_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_OUTNAME"; then echo "auxhist17_outname=\"${NL_AUXHIST17_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_Y"; then echo "auxhist17_interval_y=${NL_AUXHIST17_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_D"; then echo "auxhist17_interval_d=${NL_AUXHIST17_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_H"; then echo "auxhist17_interval_h=${NL_AUXHIST17_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_M"; then echo "auxhist17_interval_m=${NL_AUXHIST17_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL_S"; then echo "auxhist17_interval_s=${NL_AUXHIST17_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_INTERVAL"; then echo "auxhist17_interval=${NL_AUXHIST17_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_Y"; then echo "auxhist17_begin_y=${NL_AUXHIST17_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_D"; then echo "auxhist17_begin_d=${NL_AUXHIST17_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_H"; then echo "auxhist17_begin_h=${NL_AUXHIST17_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_M"; then echo "auxhist17_begin_m=${NL_AUXHIST17_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN_S"; then echo "auxhist17_begin_s=${NL_AUXHIST17_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_BEGIN"; then echo "auxhist17_begin=${NL_AUXHIST17_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_Y"; then echo "auxhist17_end_y=${NL_AUXHIST17_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_D"; then echo "auxhist17_end_d=${NL_AUXHIST17_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_H"; then echo "auxhist17_end_h=${NL_AUXHIST17_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_M"; then echo "auxhist17_end_m=${NL_AUXHIST17_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END_S"; then echo "auxhist17_end_s=${NL_AUXHIST17_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST17_END"; then echo "auxhist17_end=${NL_AUXHIST17_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST17"; then echo "io_form_auxhist17=${NL_IO_FORM_AUXHIST17}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST17"; then echo "frames_per_auxhist17=${NL_FRAMES_PER_AUXHIST17}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INNAME"; then echo "auxhist18_inname=\"${NL_AUXHIST18_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_OUTNAME"; then echo "auxhist18_outname=\"${NL_AUXHIST18_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_Y"; then echo "auxhist18_interval_y=${NL_AUXHIST18_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_D"; then echo "auxhist18_interval_d=${NL_AUXHIST18_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_H"; then echo "auxhist18_interval_h=${NL_AUXHIST18_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_M"; then echo "auxhist18_interval_m=${NL_AUXHIST18_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL_S"; then echo "auxhist18_interval_s=${NL_AUXHIST18_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_INTERVAL"; then echo "auxhist18_interval=${NL_AUXHIST18_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_Y"; then echo "auxhist18_begin_y=${NL_AUXHIST18_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_D"; then echo "auxhist18_begin_d=${NL_AUXHIST18_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_H"; then echo "auxhist18_begin_h=${NL_AUXHIST18_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_M"; then echo "auxhist18_begin_m=${NL_AUXHIST18_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN_S"; then echo "auxhist18_begin_s=${NL_AUXHIST18_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_BEGIN"; then echo "auxhist18_begin=${NL_AUXHIST18_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_Y"; then echo "auxhist18_end_y=${NL_AUXHIST18_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_D"; then echo "auxhist18_end_d=${NL_AUXHIST18_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_H"; then echo "auxhist18_end_h=${NL_AUXHIST18_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_M"; then echo "auxhist18_end_m=${NL_AUXHIST18_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END_S"; then echo "auxhist18_end_s=${NL_AUXHIST18_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST18_END"; then echo "auxhist18_end=${NL_AUXHIST18_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST18"; then echo "io_form_auxhist18=${NL_IO_FORM_AUXHIST18}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST18"; then echo "frames_per_auxhist18=${NL_FRAMES_PER_AUXHIST18}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INNAME"; then echo "auxhist19_inname=\"${NL_AUXHIST19_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_OUTNAME"; then echo "auxhist19_outname=\"${NL_AUXHIST19_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_Y"; then echo "auxhist19_interval_y=${NL_AUXHIST19_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_D"; then echo "auxhist19_interval_d=${NL_AUXHIST19_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_H"; then echo "auxhist19_interval_h=${NL_AUXHIST19_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_M"; then echo "auxhist19_interval_m=${NL_AUXHIST19_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL_S"; then echo "auxhist19_interval_s=${NL_AUXHIST19_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_INTERVAL"; then echo "auxhist19_interval=${NL_AUXHIST19_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_Y"; then echo "auxhist19_begin_y=${NL_AUXHIST19_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_D"; then echo "auxhist19_begin_d=${NL_AUXHIST19_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_H"; then echo "auxhist19_begin_h=${NL_AUXHIST19_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_M"; then echo "auxhist19_begin_m=${NL_AUXHIST19_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN_S"; then echo "auxhist19_begin_s=${NL_AUXHIST19_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_BEGIN"; then echo "auxhist19_begin=${NL_AUXHIST19_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_Y"; then echo "auxhist19_end_y=${NL_AUXHIST19_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_D"; then echo "auxhist19_end_d=${NL_AUXHIST19_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_H"; then echo "auxhist19_end_h=${NL_AUXHIST19_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_M"; then echo "auxhist19_end_m=${NL_AUXHIST19_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END_S"; then echo "auxhist19_end_s=${NL_AUXHIST19_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST19_END"; then echo "auxhist19_end=${NL_AUXHIST19_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST19"; then echo "io_form_auxhist19=${NL_IO_FORM_AUXHIST19}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST19"; then echo "frames_per_auxhist19=${NL_FRAMES_PER_AUXHIST19}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INNAME"; then echo "auxhist20_inname=\"${NL_AUXHIST20_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_OUTNAME"; then echo "auxhist20_outname=\"${NL_AUXHIST20_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_Y"; then echo "auxhist20_interval_y=${NL_AUXHIST20_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_D"; then echo "auxhist20_interval_d=${NL_AUXHIST20_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_H"; then echo "auxhist20_interval_h=${NL_AUXHIST20_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_M"; then echo "auxhist20_interval_m=${NL_AUXHIST20_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL_S"; then echo "auxhist20_interval_s=${NL_AUXHIST20_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_INTERVAL"; then echo "auxhist20_interval=${NL_AUXHIST20_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_Y"; then echo "auxhist20_begin_y=${NL_AUXHIST20_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_D"; then echo "auxhist20_begin_d=${NL_AUXHIST20_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_H"; then echo "auxhist20_begin_h=${NL_AUXHIST20_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_M"; then echo "auxhist20_begin_m=${NL_AUXHIST20_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN_S"; then echo "auxhist20_begin_s=${NL_AUXHIST20_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_BEGIN"; then echo "auxhist20_begin=${NL_AUXHIST20_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_Y"; then echo "auxhist20_end_y=${NL_AUXHIST20_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_D"; then echo "auxhist20_end_d=${NL_AUXHIST20_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_H"; then echo "auxhist20_end_h=${NL_AUXHIST20_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_M"; then echo "auxhist20_end_m=${NL_AUXHIST20_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END_S"; then echo "auxhist20_end_s=${NL_AUXHIST20_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST20_END"; then echo "auxhist20_end=${NL_AUXHIST20_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST20"; then echo "io_form_auxhist20=${NL_IO_FORM_AUXHIST20}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST20"; then echo "frames_per_auxhist20=${NL_FRAMES_PER_AUXHIST20}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INNAME"; then echo "auxhist21_inname=\"${NL_AUXHIST21_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_OUTNAME"; then echo "auxhist21_outname=\"${NL_AUXHIST21_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_Y"; then echo "auxhist21_interval_y=${NL_AUXHIST21_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_D"; then echo "auxhist21_interval_d=${NL_AUXHIST21_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_H"; then echo "auxhist21_interval_h=${NL_AUXHIST21_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_M"; then echo "auxhist21_interval_m=${NL_AUXHIST21_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL_S"; then echo "auxhist21_interval_s=${NL_AUXHIST21_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_INTERVAL"; then echo "auxhist21_interval=${NL_AUXHIST21_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_Y"; then echo "auxhist21_begin_y=${NL_AUXHIST21_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_D"; then echo "auxhist21_begin_d=${NL_AUXHIST21_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_H"; then echo "auxhist21_begin_h=${NL_AUXHIST21_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_M"; then echo "auxhist21_begin_m=${NL_AUXHIST21_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN_S"; then echo "auxhist21_begin_s=${NL_AUXHIST21_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_BEGIN"; then echo "auxhist21_begin=${NL_AUXHIST21_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_Y"; then echo "auxhist21_end_y=${NL_AUXHIST21_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_D"; then echo "auxhist21_end_d=${NL_AUXHIST21_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_H"; then echo "auxhist21_end_h=${NL_AUXHIST21_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_M"; then echo "auxhist21_end_m=${NL_AUXHIST21_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END_S"; then echo "auxhist21_end_s=${NL_AUXHIST21_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST21_END"; then echo "auxhist21_end=${NL_AUXHIST21_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST21"; then echo "io_form_auxhist21=${NL_IO_FORM_AUXHIST21}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST21"; then echo "frames_per_auxhist21=${NL_FRAMES_PER_AUXHIST21}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INNAME"; then echo "auxhist22_inname=\"${NL_AUXHIST22_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_OUTNAME"; then echo "auxhist22_outname=\"${NL_AUXHIST22_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_Y"; then echo "auxhist22_interval_y=${NL_AUXHIST22_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_D"; then echo "auxhist22_interval_d=${NL_AUXHIST22_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_H"; then echo "auxhist22_interval_h=${NL_AUXHIST22_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_M"; then echo "auxhist22_interval_m=${NL_AUXHIST22_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL_S"; then echo "auxhist22_interval_s=${NL_AUXHIST22_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_INTERVAL"; then echo "auxhist22_interval=${NL_AUXHIST22_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_Y"; then echo "auxhist22_begin_y=${NL_AUXHIST22_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_D"; then echo "auxhist22_begin_d=${NL_AUXHIST22_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_H"; then echo "auxhist22_begin_h=${NL_AUXHIST22_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_M"; then echo "auxhist22_begin_m=${NL_AUXHIST22_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN_S"; then echo "auxhist22_begin_s=${NL_AUXHIST22_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_BEGIN"; then echo "auxhist22_begin=${NL_AUXHIST22_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_Y"; then echo "auxhist22_end_y=${NL_AUXHIST22_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_D"; then echo "auxhist22_end_d=${NL_AUXHIST22_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_H"; then echo "auxhist22_end_h=${NL_AUXHIST22_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_M"; then echo "auxhist22_end_m=${NL_AUXHIST22_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END_S"; then echo "auxhist22_end_s=${NL_AUXHIST22_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST22_END"; then echo "auxhist22_end=${NL_AUXHIST22_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST22"; then echo "io_form_auxhist22=${NL_IO_FORM_AUXHIST22}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST22"; then echo "frames_per_auxhist22=${NL_FRAMES_PER_AUXHIST22}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INNAME"; then echo "auxhist23_inname=\"${NL_AUXHIST23_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_OUTNAME"; then echo "auxhist23_outname=\"${NL_AUXHIST23_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_Y"; then echo "auxhist23_interval_y=${NL_AUXHIST23_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_D"; then echo "auxhist23_interval_d=${NL_AUXHIST23_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_H"; then echo "auxhist23_interval_h=${NL_AUXHIST23_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_M"; then echo "auxhist23_interval_m=${NL_AUXHIST23_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL_S"; then echo "auxhist23_interval_s=${NL_AUXHIST23_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_INTERVAL"; then echo "auxhist23_interval=${NL_AUXHIST23_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_Y"; then echo "auxhist23_begin_y=${NL_AUXHIST23_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_D"; then echo "auxhist23_begin_d=${NL_AUXHIST23_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_H"; then echo "auxhist23_begin_h=${NL_AUXHIST23_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_M"; then echo "auxhist23_begin_m=${NL_AUXHIST23_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN_S"; then echo "auxhist23_begin_s=${NL_AUXHIST23_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_BEGIN"; then echo "auxhist23_begin=${NL_AUXHIST23_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_Y"; then echo "auxhist23_end_y=${NL_AUXHIST23_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_D"; then echo "auxhist23_end_d=${NL_AUXHIST23_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_H"; then echo "auxhist23_end_h=${NL_AUXHIST23_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_M"; then echo "auxhist23_end_m=${NL_AUXHIST23_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END_S"; then echo "auxhist23_end_s=${NL_AUXHIST23_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST23_END"; then echo "auxhist23_end=${NL_AUXHIST23_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST23"; then echo "io_form_auxhist23=${NL_IO_FORM_AUXHIST23}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST23"; then echo "frames_per_auxhist23=${NL_FRAMES_PER_AUXHIST23}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INNAME"; then echo "auxhist24_inname=\"${NL_AUXHIST24_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_OUTNAME"; then echo "auxhist24_outname=\"${NL_AUXHIST24_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_Y"; then echo "auxhist24_interval_y=${NL_AUXHIST24_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_D"; then echo "auxhist24_interval_d=${NL_AUXHIST24_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_H"; then echo "auxhist24_interval_h=${NL_AUXHIST24_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_M"; then echo "auxhist24_interval_m=${NL_AUXHIST24_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL_S"; then echo "auxhist24_interval_s=${NL_AUXHIST24_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_INTERVAL"; then echo "auxhist24_interval=${NL_AUXHIST24_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_Y"; then echo "auxhist24_begin_y=${NL_AUXHIST24_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_D"; then echo "auxhist24_begin_d=${NL_AUXHIST24_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_H"; then echo "auxhist24_begin_h=${NL_AUXHIST24_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_M"; then echo "auxhist24_begin_m=${NL_AUXHIST24_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN_S"; then echo "auxhist24_begin_s=${NL_AUXHIST24_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_BEGIN"; then echo "auxhist24_begin=${NL_AUXHIST24_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_Y"; then echo "auxhist24_end_y=${NL_AUXHIST24_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_D"; then echo "auxhist24_end_d=${NL_AUXHIST24_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_H"; then echo "auxhist24_end_h=${NL_AUXHIST24_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_M"; then echo "auxhist24_end_m=${NL_AUXHIST24_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END_S"; then echo "auxhist24_end_s=${NL_AUXHIST24_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXHIST24_END"; then echo "auxhist24_end=${NL_AUXHIST24_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXHIST24"; then echo "io_form_auxhist24=${NL_IO_FORM_AUXHIST24}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXHIST24"; then echo "frames_per_auxhist24=${NL_FRAMES_PER_AUXHIST24}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_OUTNAME"; then echo "auxinput1_outname=\"${NL_AUXINPUT1_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_Y"; then echo "auxinput1_interval_y=${NL_AUXINPUT1_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_D"; then echo "auxinput1_interval_d=${NL_AUXINPUT1_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_H"; then echo "auxinput1_interval_h=${NL_AUXINPUT1_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_M"; then echo "auxinput1_interval_m=${NL_AUXINPUT1_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL_S"; then echo "auxinput1_interval_s=${NL_AUXINPUT1_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_INTERVAL"; then echo "auxinput1_interval=${NL_AUXINPUT1_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_Y"; then echo "auxinput1_begin_y=${NL_AUXINPUT1_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_D"; then echo "auxinput1_begin_d=${NL_AUXINPUT1_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_H"; then echo "auxinput1_begin_h=${NL_AUXINPUT1_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_M"; then echo "auxinput1_begin_m=${NL_AUXINPUT1_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN_S"; then echo "auxinput1_begin_s=${NL_AUXINPUT1_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_BEGIN"; then echo "auxinput1_begin=${NL_AUXINPUT1_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_Y"; then echo "auxinput1_end_y=${NL_AUXINPUT1_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_D"; then echo "auxinput1_end_d=${NL_AUXINPUT1_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_H"; then echo "auxinput1_end_h=${NL_AUXINPUT1_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_M"; then echo "auxinput1_end_m=${NL_AUXINPUT1_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END_S"; then echo "auxinput1_end_s=${NL_AUXINPUT1_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT1_END"; then echo "auxinput1_end=${NL_AUXINPUT1_END}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT1"; then echo "frames_per_auxinput1=${NL_FRAMES_PER_AUXINPUT1}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INNAME"; then echo "auxinput2_inname=\"${NL_AUXINPUT2_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_OUTNAME"; then echo "auxinput2_outname=\"${NL_AUXINPUT2_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_Y"; then echo "auxinput2_interval_y=${NL_AUXINPUT2_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_D"; then echo "auxinput2_interval_d=${NL_AUXINPUT2_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_H"; then echo "auxinput2_interval_h=${NL_AUXINPUT2_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_M"; then echo "auxinput2_interval_m=${NL_AUXINPUT2_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL_S"; then echo "auxinput2_interval_s=${NL_AUXINPUT2_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_INTERVAL"; then echo "auxinput2_interval=${NL_AUXINPUT2_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_Y"; then echo "auxinput2_begin_y=${NL_AUXINPUT2_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_D"; then echo "auxinput2_begin_d=${NL_AUXINPUT2_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_H"; then echo "auxinput2_begin_h=${NL_AUXINPUT2_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_M"; then echo "auxinput2_begin_m=${NL_AUXINPUT2_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN_S"; then echo "auxinput2_begin_s=${NL_AUXINPUT2_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_BEGIN"; then echo "auxinput2_begin=${NL_AUXINPUT2_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_Y"; then echo "auxinput2_end_y=${NL_AUXINPUT2_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_D"; then echo "auxinput2_end_d=${NL_AUXINPUT2_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_H"; then echo "auxinput2_end_h=${NL_AUXINPUT2_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_M"; then echo "auxinput2_end_m=${NL_AUXINPUT2_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END_S"; then echo "auxinput2_end_s=${NL_AUXINPUT2_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT2_END"; then echo "auxinput2_end=${NL_AUXINPUT2_END}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT2"; then echo "frames_per_auxinput2=${NL_FRAMES_PER_AUXINPUT2}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INNAME"; then echo "auxinput3_inname=\"${NL_AUXINPUT3_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_OUTNAME"; then echo "auxinput3_outname=\"${NL_AUXINPUT3_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_Y"; then echo "auxinput3_interval_y=${NL_AUXINPUT3_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_D"; then echo "auxinput3_interval_d=${NL_AUXINPUT3_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_H"; then echo "auxinput3_interval_h=${NL_AUXINPUT3_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_M"; then echo "auxinput3_interval_m=${NL_AUXINPUT3_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL_S"; then echo "auxinput3_interval_s=${NL_AUXINPUT3_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_INTERVAL"; then echo "auxinput3_interval=${NL_AUXINPUT3_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_Y"; then echo "auxinput3_begin_y=${NL_AUXINPUT3_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_D"; then echo "auxinput3_begin_d=${NL_AUXINPUT3_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_H"; then echo "auxinput3_begin_h=${NL_AUXINPUT3_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_M"; then echo "auxinput3_begin_m=${NL_AUXINPUT3_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN_S"; then echo "auxinput3_begin_s=${NL_AUXINPUT3_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_BEGIN"; then echo "auxinput3_begin=${NL_AUXINPUT3_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_Y"; then echo "auxinput3_end_y=${NL_AUXINPUT3_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_D"; then echo "auxinput3_end_d=${NL_AUXINPUT3_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_H"; then echo "auxinput3_end_h=${NL_AUXINPUT3_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_M"; then echo "auxinput3_end_m=${NL_AUXINPUT3_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END_S"; then echo "auxinput3_end_s=${NL_AUXINPUT3_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT3_END"; then echo "auxinput3_end=${NL_AUXINPUT3_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT3"; then echo "io_form_auxinput3=${NL_IO_FORM_AUXINPUT3}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT3"; then echo "frames_per_auxinput3=${NL_FRAMES_PER_AUXINPUT3}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INNAME"; then echo "auxinput4_inname=\"${NL_AUXINPUT4_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_OUTNAME"; then echo "auxinput4_outname=\"${NL_AUXINPUT4_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_Y"; then echo "auxinput4_interval_y=${NL_AUXINPUT4_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_D"; then echo "auxinput4_interval_d=${NL_AUXINPUT4_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_H"; then echo "auxinput4_interval_h=${NL_AUXINPUT4_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_M"; then echo "auxinput4_interval_m=${NL_AUXINPUT4_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL_S"; then echo "auxinput4_interval_s=${NL_AUXINPUT4_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_INTERVAL"; then echo "auxinput4_interval=${NL_AUXINPUT4_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_Y"; then echo "auxinput4_begin_y=${NL_AUXINPUT4_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_D"; then echo "auxinput4_begin_d=${NL_AUXINPUT4_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_H"; then echo "auxinput4_begin_h=${NL_AUXINPUT4_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_M"; then echo "auxinput4_begin_m=${NL_AUXINPUT4_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN_S"; then echo "auxinput4_begin_s=${NL_AUXINPUT4_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_BEGIN"; then echo "auxinput4_begin=${NL_AUXINPUT4_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_Y"; then echo "auxinput4_end_y=${NL_AUXINPUT4_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_D"; then echo "auxinput4_end_d=${NL_AUXINPUT4_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_H"; then echo "auxinput4_end_h=${NL_AUXINPUT4_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_M"; then echo "auxinput4_end_m=${NL_AUXINPUT4_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END_S"; then echo "auxinput4_end_s=${NL_AUXINPUT4_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT4_END"; then echo "auxinput4_end=${NL_AUXINPUT4_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT4"; then echo "io_form_auxinput4=${NL_IO_FORM_AUXINPUT4}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT4"; then echo "frames_per_auxinput4=${NL_FRAMES_PER_AUXINPUT4}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INNAME"; then echo "auxinput5_inname=\"${NL_AUXINPUT5_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_OUTNAME"; then echo "auxinput5_outname=\"${NL_AUXINPUT5_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_Y"; then echo "auxinput5_interval_y=${NL_AUXINPUT5_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_D"; then echo "auxinput5_interval_d=${NL_AUXINPUT5_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_H"; then echo "auxinput5_interval_h=${NL_AUXINPUT5_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_M"; then echo "auxinput5_interval_m=${NL_AUXINPUT5_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL_S"; then echo "auxinput5_interval_s=${NL_AUXINPUT5_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_INTERVAL"; then echo "auxinput5_interval=${NL_AUXINPUT5_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_Y"; then echo "auxinput5_begin_y=${NL_AUXINPUT5_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_D"; then echo "auxinput5_begin_d=${NL_AUXINPUT5_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_H"; then echo "auxinput5_begin_h=${NL_AUXINPUT5_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_M"; then echo "auxinput5_begin_m=${NL_AUXINPUT5_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN_S"; then echo "auxinput5_begin_s=${NL_AUXINPUT5_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_BEGIN"; then echo "auxinput5_begin=${NL_AUXINPUT5_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_Y"; then echo "auxinput5_end_y=${NL_AUXINPUT5_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_D"; then echo "auxinput5_end_d=${NL_AUXINPUT5_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_H"; then echo "auxinput5_end_h=${NL_AUXINPUT5_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_M"; then echo "auxinput5_end_m=${NL_AUXINPUT5_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END_S"; then echo "auxinput5_end_s=${NL_AUXINPUT5_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT5_END"; then echo "auxinput5_end=${NL_AUXINPUT5_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT5"; then echo "io_form_auxinput5=${NL_IO_FORM_AUXINPUT5}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT5"; then echo "frames_per_auxinput5=${NL_FRAMES_PER_AUXINPUT5}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INNAME"; then echo "auxinput6_inname=\"${NL_AUXINPUT6_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_OUTNAME"; then echo "auxinput6_outname=\"${NL_AUXINPUT6_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_Y"; then echo "auxinput6_interval_y=${NL_AUXINPUT6_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_D"; then echo "auxinput6_interval_d=${NL_AUXINPUT6_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_H"; then echo "auxinput6_interval_h=${NL_AUXINPUT6_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_M"; then echo "auxinput6_interval_m=${NL_AUXINPUT6_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL_S"; then echo "auxinput6_interval_s=${NL_AUXINPUT6_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_INTERVAL"; then echo "auxinput6_interval=${NL_AUXINPUT6_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_Y"; then echo "auxinput6_begin_y=${NL_AUXINPUT6_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_D"; then echo "auxinput6_begin_d=${NL_AUXINPUT6_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_H"; then echo "auxinput6_begin_h=${NL_AUXINPUT6_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_M"; then echo "auxinput6_begin_m=${NL_AUXINPUT6_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN_S"; then echo "auxinput6_begin_s=${NL_AUXINPUT6_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_BEGIN"; then echo "auxinput6_begin=${NL_AUXINPUT6_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_Y"; then echo "auxinput6_end_y=${NL_AUXINPUT6_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_D"; then echo "auxinput6_end_d=${NL_AUXINPUT6_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_H"; then echo "auxinput6_end_h=${NL_AUXINPUT6_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_M"; then echo "auxinput6_end_m=${NL_AUXINPUT6_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END_S"; then echo "auxinput6_end_s=${NL_AUXINPUT6_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT6_END"; then echo "auxinput6_end=${NL_AUXINPUT6_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT6"; then echo "io_form_auxinput6=${NL_IO_FORM_AUXINPUT6}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT6"; then echo "frames_per_auxinput6=${NL_FRAMES_PER_AUXINPUT6}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INNAME"; then echo "auxinput7_inname=\"${NL_AUXINPUT7_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_OUTNAME"; then echo "auxinput7_outname=\"${NL_AUXINPUT7_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_Y"; then echo "auxinput7_interval_y=${NL_AUXINPUT7_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_D"; then echo "auxinput7_interval_d=${NL_AUXINPUT7_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_H"; then echo "auxinput7_interval_h=${NL_AUXINPUT7_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_M"; then echo "auxinput7_interval_m=${NL_AUXINPUT7_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL_S"; then echo "auxinput7_interval_s=${NL_AUXINPUT7_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_INTERVAL"; then echo "auxinput7_interval=${NL_AUXINPUT7_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_Y"; then echo "auxinput7_begin_y=${NL_AUXINPUT7_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_D"; then echo "auxinput7_begin_d=${NL_AUXINPUT7_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_H"; then echo "auxinput7_begin_h=${NL_AUXINPUT7_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_M"; then echo "auxinput7_begin_m=${NL_AUXINPUT7_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN_S"; then echo "auxinput7_begin_s=${NL_AUXINPUT7_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_BEGIN"; then echo "auxinput7_begin=${NL_AUXINPUT7_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_Y"; then echo "auxinput7_end_y=${NL_AUXINPUT7_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_D"; then echo "auxinput7_end_d=${NL_AUXINPUT7_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_H"; then echo "auxinput7_end_h=${NL_AUXINPUT7_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_M"; then echo "auxinput7_end_m=${NL_AUXINPUT7_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END_S"; then echo "auxinput7_end_s=${NL_AUXINPUT7_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT7_END"; then echo "auxinput7_end=${NL_AUXINPUT7_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT7"; then echo "io_form_auxinput7=${NL_IO_FORM_AUXINPUT7}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT7"; then echo "frames_per_auxinput7=${NL_FRAMES_PER_AUXINPUT7}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INNAME"; then echo "auxinput8_inname=\"${NL_AUXINPUT8_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_OUTNAME"; then echo "auxinput8_outname=\"${NL_AUXINPUT8_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_Y"; then echo "auxinput8_interval_y=${NL_AUXINPUT8_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_D"; then echo "auxinput8_interval_d=${NL_AUXINPUT8_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_H"; then echo "auxinput8_interval_h=${NL_AUXINPUT8_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_M"; then echo "auxinput8_interval_m=${NL_AUXINPUT8_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL_S"; then echo "auxinput8_interval_s=${NL_AUXINPUT8_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_INTERVAL"; then echo "auxinput8_interval=${NL_AUXINPUT8_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_Y"; then echo "auxinput8_begin_y=${NL_AUXINPUT8_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_D"; then echo "auxinput8_begin_d=${NL_AUXINPUT8_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_H"; then echo "auxinput8_begin_h=${NL_AUXINPUT8_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_M"; then echo "auxinput8_begin_m=${NL_AUXINPUT8_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN_S"; then echo "auxinput8_begin_s=${NL_AUXINPUT8_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_BEGIN"; then echo "auxinput8_begin=${NL_AUXINPUT8_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_Y"; then echo "auxinput8_end_y=${NL_AUXINPUT8_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_D"; then echo "auxinput8_end_d=${NL_AUXINPUT8_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_H"; then echo "auxinput8_end_h=${NL_AUXINPUT8_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_M"; then echo "auxinput8_end_m=${NL_AUXINPUT8_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END_S"; then echo "auxinput8_end_s=${NL_AUXINPUT8_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT8_END"; then echo "auxinput8_end=${NL_AUXINPUT8_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT8"; then echo "io_form_auxinput8=${NL_IO_FORM_AUXINPUT8}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT8"; then echo "frames_per_auxinput8=${NL_FRAMES_PER_AUXINPUT8}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INNAME"; then echo "auxinput9_inname=\"${NL_AUXINPUT9_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_OUTNAME"; then echo "auxinput9_outname=\"${NL_AUXINPUT9_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_Y"; then echo "auxinput9_interval_y=${NL_AUXINPUT9_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_D"; then echo "auxinput9_interval_d=${NL_AUXINPUT9_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_H"; then echo "auxinput9_interval_h=${NL_AUXINPUT9_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_M"; then echo "auxinput9_interval_m=${NL_AUXINPUT9_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL_S"; then echo "auxinput9_interval_s=${NL_AUXINPUT9_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_INTERVAL"; then echo "auxinput9_interval=${NL_AUXINPUT9_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_Y"; then echo "auxinput9_begin_y=${NL_AUXINPUT9_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_D"; then echo "auxinput9_begin_d=${NL_AUXINPUT9_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_H"; then echo "auxinput9_begin_h=${NL_AUXINPUT9_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_M"; then echo "auxinput9_begin_m=${NL_AUXINPUT9_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN_S"; then echo "auxinput9_begin_s=${NL_AUXINPUT9_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_BEGIN"; then echo "auxinput9_begin=${NL_AUXINPUT9_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_Y"; then echo "auxinput9_end_y=${NL_AUXINPUT9_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_D"; then echo "auxinput9_end_d=${NL_AUXINPUT9_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_H"; then echo "auxinput9_end_h=${NL_AUXINPUT9_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_M"; then echo "auxinput9_end_m=${NL_AUXINPUT9_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END_S"; then echo "auxinput9_end_s=${NL_AUXINPUT9_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT9_END"; then echo "auxinput9_end=${NL_AUXINPUT9_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT9"; then echo "io_form_auxinput9=${NL_IO_FORM_AUXINPUT9}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT9"; then echo "frames_per_auxinput9=${NL_FRAMES_PER_AUXINPUT9}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INNAME"; then echo "auxinput10_inname=\"${NL_AUXINPUT10_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_OUTNAME"; then echo "auxinput10_outname=\"${NL_AUXINPUT10_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_Y"; then echo "auxinput10_interval_y=${NL_AUXINPUT10_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_D"; then echo "auxinput10_interval_d=${NL_AUXINPUT10_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_H"; then echo "auxinput10_interval_h=${NL_AUXINPUT10_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_M"; then echo "auxinput10_interval_m=${NL_AUXINPUT10_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL_S"; then echo "auxinput10_interval_s=${NL_AUXINPUT10_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_INTERVAL"; then echo "auxinput10_interval=${NL_AUXINPUT10_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_Y"; then echo "auxinput10_begin_y=${NL_AUXINPUT10_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_D"; then echo "auxinput10_begin_d=${NL_AUXINPUT10_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_H"; then echo "auxinput10_begin_h=${NL_AUXINPUT10_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_M"; then echo "auxinput10_begin_m=${NL_AUXINPUT10_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN_S"; then echo "auxinput10_begin_s=${NL_AUXINPUT10_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_BEGIN"; then echo "auxinput10_begin=${NL_AUXINPUT10_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_Y"; then echo "auxinput10_end_y=${NL_AUXINPUT10_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_D"; then echo "auxinput10_end_d=${NL_AUXINPUT10_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_H"; then echo "auxinput10_end_h=${NL_AUXINPUT10_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_M"; then echo "auxinput10_end_m=${NL_AUXINPUT10_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END_S"; then echo "auxinput10_end_s=${NL_AUXINPUT10_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT10_END"; then echo "auxinput10_end=${NL_AUXINPUT10_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT10"; then echo "io_form_auxinput10=${NL_IO_FORM_AUXINPUT10}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT10"; then echo "frames_per_auxinput10=${NL_FRAMES_PER_AUXINPUT10}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INNAME"; then echo "auxinput11_inname=\"${NL_AUXINPUT11_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_OUTNAME"; then echo "auxinput11_outname=\"${NL_AUXINPUT11_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_Y"; then echo "auxinput11_interval_y=${NL_AUXINPUT11_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_D"; then echo "auxinput11_interval_d=${NL_AUXINPUT11_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_H"; then echo "auxinput11_interval_h=${NL_AUXINPUT11_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_M"; then echo "auxinput11_interval_m=${NL_AUXINPUT11_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL_S"; then echo "auxinput11_interval_s=${NL_AUXINPUT11_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_INTERVAL"; then echo "auxinput11_interval=${NL_AUXINPUT11_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_Y"; then echo "auxinput11_begin_y=${NL_AUXINPUT11_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_D"; then echo "auxinput11_begin_d=${NL_AUXINPUT11_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_H"; then echo "auxinput11_begin_h=${NL_AUXINPUT11_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_M"; then echo "auxinput11_begin_m=${NL_AUXINPUT11_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN_S"; then echo "auxinput11_begin_s=${NL_AUXINPUT11_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_BEGIN"; then echo "auxinput11_begin=${NL_AUXINPUT11_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_Y"; then echo "auxinput11_end_y=${NL_AUXINPUT11_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_D"; then echo "auxinput11_end_d=${NL_AUXINPUT11_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_H"; then echo "auxinput11_end_h=${NL_AUXINPUT11_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_M"; then echo "auxinput11_end_m=${NL_AUXINPUT11_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END_S"; then echo "auxinput11_end_s=${NL_AUXINPUT11_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT11_END"; then echo "auxinput11_end=${NL_AUXINPUT11_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT11"; then echo "io_form_auxinput11=${NL_IO_FORM_AUXINPUT11}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT11"; then echo "frames_per_auxinput11=${NL_FRAMES_PER_AUXINPUT11}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INNAME"; then echo "auxinput12_inname=\"${NL_AUXINPUT12_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_OUTNAME"; then echo "auxinput12_outname=\"${NL_AUXINPUT12_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_Y"; then echo "auxinput12_interval_y=${NL_AUXINPUT12_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_D"; then echo "auxinput12_interval_d=${NL_AUXINPUT12_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_H"; then echo "auxinput12_interval_h=${NL_AUXINPUT12_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_M"; then echo "auxinput12_interval_m=${NL_AUXINPUT12_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL_S"; then echo "auxinput12_interval_s=${NL_AUXINPUT12_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_INTERVAL"; then echo "auxinput12_interval=${NL_AUXINPUT12_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_Y"; then echo "auxinput12_begin_y=${NL_AUXINPUT12_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_D"; then echo "auxinput12_begin_d=${NL_AUXINPUT12_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_H"; then echo "auxinput12_begin_h=${NL_AUXINPUT12_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_M"; then echo "auxinput12_begin_m=${NL_AUXINPUT12_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN_S"; then echo "auxinput12_begin_s=${NL_AUXINPUT12_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_BEGIN"; then echo "auxinput12_begin=${NL_AUXINPUT12_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_Y"; then echo "auxinput12_end_y=${NL_AUXINPUT12_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_D"; then echo "auxinput12_end_d=${NL_AUXINPUT12_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_H"; then echo "auxinput12_end_h=${NL_AUXINPUT12_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_M"; then echo "auxinput12_end_m=${NL_AUXINPUT12_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END_S"; then echo "auxinput12_end_s=${NL_AUXINPUT12_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT12_END"; then echo "auxinput12_end=${NL_AUXINPUT12_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT12"; then echo "io_form_auxinput12=${NL_IO_FORM_AUXINPUT12}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT12"; then echo "frames_per_auxinput12=${NL_FRAMES_PER_AUXINPUT12}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INNAME"; then echo "auxinput13_inname=\"${NL_AUXINPUT13_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_OUTNAME"; then echo "auxinput13_outname=\"${NL_AUXINPUT13_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_Y"; then echo "auxinput13_interval_y=${NL_AUXINPUT13_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_D"; then echo "auxinput13_interval_d=${NL_AUXINPUT13_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_H"; then echo "auxinput13_interval_h=${NL_AUXINPUT13_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_M"; then echo "auxinput13_interval_m=${NL_AUXINPUT13_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL_S"; then echo "auxinput13_interval_s=${NL_AUXINPUT13_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_INTERVAL"; then echo "auxinput13_interval=${NL_AUXINPUT13_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_Y"; then echo "auxinput13_begin_y=${NL_AUXINPUT13_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_D"; then echo "auxinput13_begin_d=${NL_AUXINPUT13_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_H"; then echo "auxinput13_begin_h=${NL_AUXINPUT13_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_M"; then echo "auxinput13_begin_m=${NL_AUXINPUT13_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN_S"; then echo "auxinput13_begin_s=${NL_AUXINPUT13_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_BEGIN"; then echo "auxinput13_begin=${NL_AUXINPUT13_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_Y"; then echo "auxinput13_end_y=${NL_AUXINPUT13_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_D"; then echo "auxinput13_end_d=${NL_AUXINPUT13_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_H"; then echo "auxinput13_end_h=${NL_AUXINPUT13_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_M"; then echo "auxinput13_end_m=${NL_AUXINPUT13_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END_S"; then echo "auxinput13_end_s=${NL_AUXINPUT13_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT13_END"; then echo "auxinput13_end=${NL_AUXINPUT13_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT13"; then echo "io_form_auxinput13=${NL_IO_FORM_AUXINPUT13}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT13"; then echo "frames_per_auxinput13=${NL_FRAMES_PER_AUXINPUT13}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INNAME"; then echo "auxinput14_inname=\"${NL_AUXINPUT14_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_OUTNAME"; then echo "auxinput14_outname=\"${NL_AUXINPUT14_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_Y"; then echo "auxinput14_interval_y=${NL_AUXINPUT14_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_D"; then echo "auxinput14_interval_d=${NL_AUXINPUT14_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_H"; then echo "auxinput14_interval_h=${NL_AUXINPUT14_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_M"; then echo "auxinput14_interval_m=${NL_AUXINPUT14_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL_S"; then echo "auxinput14_interval_s=${NL_AUXINPUT14_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_INTERVAL"; then echo "auxinput14_interval=${NL_AUXINPUT14_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_Y"; then echo "auxinput14_begin_y=${NL_AUXINPUT14_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_D"; then echo "auxinput14_begin_d=${NL_AUXINPUT14_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_H"; then echo "auxinput14_begin_h=${NL_AUXINPUT14_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_M"; then echo "auxinput14_begin_m=${NL_AUXINPUT14_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN_S"; then echo "auxinput14_begin_s=${NL_AUXINPUT14_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_BEGIN"; then echo "auxinput14_begin=${NL_AUXINPUT14_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_Y"; then echo "auxinput14_end_y=${NL_AUXINPUT14_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_D"; then echo "auxinput14_end_d=${NL_AUXINPUT14_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_H"; then echo "auxinput14_end_h=${NL_AUXINPUT14_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_M"; then echo "auxinput14_end_m=${NL_AUXINPUT14_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END_S"; then echo "auxinput14_end_s=${NL_AUXINPUT14_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT14_END"; then echo "auxinput14_end=${NL_AUXINPUT14_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT14"; then echo "io_form_auxinput14=${NL_IO_FORM_AUXINPUT14}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT14"; then echo "frames_per_auxinput14=${NL_FRAMES_PER_AUXINPUT14}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INNAME"; then echo "auxinput15_inname=\"${NL_AUXINPUT15_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_OUTNAME"; then echo "auxinput15_outname=\"${NL_AUXINPUT15_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_Y"; then echo "auxinput15_interval_y=${NL_AUXINPUT15_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_D"; then echo "auxinput15_interval_d=${NL_AUXINPUT15_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_H"; then echo "auxinput15_interval_h=${NL_AUXINPUT15_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_M"; then echo "auxinput15_interval_m=${NL_AUXINPUT15_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL_S"; then echo "auxinput15_interval_s=${NL_AUXINPUT15_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_INTERVAL"; then echo "auxinput15_interval=${NL_AUXINPUT15_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_Y"; then echo "auxinput15_begin_y=${NL_AUXINPUT15_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_D"; then echo "auxinput15_begin_d=${NL_AUXINPUT15_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_H"; then echo "auxinput15_begin_h=${NL_AUXINPUT15_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_M"; then echo "auxinput15_begin_m=${NL_AUXINPUT15_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN_S"; then echo "auxinput15_begin_s=${NL_AUXINPUT15_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_BEGIN"; then echo "auxinput15_begin=${NL_AUXINPUT15_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_Y"; then echo "auxinput15_end_y=${NL_AUXINPUT15_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_D"; then echo "auxinput15_end_d=${NL_AUXINPUT15_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_H"; then echo "auxinput15_end_h=${NL_AUXINPUT15_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_M"; then echo "auxinput15_end_m=${NL_AUXINPUT15_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END_S"; then echo "auxinput15_end_s=${NL_AUXINPUT15_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT15_END"; then echo "auxinput15_end=${NL_AUXINPUT15_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT15"; then echo "io_form_auxinput15=${NL_IO_FORM_AUXINPUT15}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT15"; then echo "frames_per_auxinput15=${NL_FRAMES_PER_AUXINPUT15}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INNAME"; then echo "auxinput16_inname=\"${NL_AUXINPUT16_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_OUTNAME"; then echo "auxinput16_outname=\"${NL_AUXINPUT16_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_Y"; then echo "auxinput16_interval_y=${NL_AUXINPUT16_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_D"; then echo "auxinput16_interval_d=${NL_AUXINPUT16_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_H"; then echo "auxinput16_interval_h=${NL_AUXINPUT16_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_M"; then echo "auxinput16_interval_m=${NL_AUXINPUT16_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL_S"; then echo "auxinput16_interval_s=${NL_AUXINPUT16_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_INTERVAL"; then echo "auxinput16_interval=${NL_AUXINPUT16_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_Y"; then echo "auxinput16_begin_y=${NL_AUXINPUT16_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_D"; then echo "auxinput16_begin_d=${NL_AUXINPUT16_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_H"; then echo "auxinput16_begin_h=${NL_AUXINPUT16_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_M"; then echo "auxinput16_begin_m=${NL_AUXINPUT16_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN_S"; then echo "auxinput16_begin_s=${NL_AUXINPUT16_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_BEGIN"; then echo "auxinput16_begin=${NL_AUXINPUT16_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_Y"; then echo "auxinput16_end_y=${NL_AUXINPUT16_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_D"; then echo "auxinput16_end_d=${NL_AUXINPUT16_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_H"; then echo "auxinput16_end_h=${NL_AUXINPUT16_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_M"; then echo "auxinput16_end_m=${NL_AUXINPUT16_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END_S"; then echo "auxinput16_end_s=${NL_AUXINPUT16_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT16_END"; then echo "auxinput16_end=${NL_AUXINPUT16_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT16"; then echo "io_form_auxinput16=${NL_IO_FORM_AUXINPUT16}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT16"; then echo "frames_per_auxinput16=${NL_FRAMES_PER_AUXINPUT16}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INNAME"; then echo "auxinput17_inname=\"${NL_AUXINPUT17_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_OUTNAME"; then echo "auxinput17_outname=\"${NL_AUXINPUT17_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_Y"; then echo "auxinput17_interval_y=${NL_AUXINPUT17_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_D"; then echo "auxinput17_interval_d=${NL_AUXINPUT17_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_H"; then echo "auxinput17_interval_h=${NL_AUXINPUT17_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_M"; then echo "auxinput17_interval_m=${NL_AUXINPUT17_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL_S"; then echo "auxinput17_interval_s=${NL_AUXINPUT17_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_INTERVAL"; then echo "auxinput17_interval=${NL_AUXINPUT17_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_Y"; then echo "auxinput17_begin_y=${NL_AUXINPUT17_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_D"; then echo "auxinput17_begin_d=${NL_AUXINPUT17_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_H"; then echo "auxinput17_begin_h=${NL_AUXINPUT17_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_M"; then echo "auxinput17_begin_m=${NL_AUXINPUT17_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN_S"; then echo "auxinput17_begin_s=${NL_AUXINPUT17_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_BEGIN"; then echo "auxinput17_begin=${NL_AUXINPUT17_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_Y"; then echo "auxinput17_end_y=${NL_AUXINPUT17_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_D"; then echo "auxinput17_end_d=${NL_AUXINPUT17_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_H"; then echo "auxinput17_end_h=${NL_AUXINPUT17_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_M"; then echo "auxinput17_end_m=${NL_AUXINPUT17_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END_S"; then echo "auxinput17_end_s=${NL_AUXINPUT17_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT17_END"; then echo "auxinput17_end=${NL_AUXINPUT17_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT17"; then echo "io_form_auxinput17=${NL_IO_FORM_AUXINPUT17}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT17"; then echo "frames_per_auxinput17=${NL_FRAMES_PER_AUXINPUT17}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INNAME"; then echo "auxinput18_inname=\"${NL_AUXINPUT18_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_OUTNAME"; then echo "auxinput18_outname=\"${NL_AUXINPUT18_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_Y"; then echo "auxinput18_interval_y=${NL_AUXINPUT18_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_D"; then echo "auxinput18_interval_d=${NL_AUXINPUT18_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_H"; then echo "auxinput18_interval_h=${NL_AUXINPUT18_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_M"; then echo "auxinput18_interval_m=${NL_AUXINPUT18_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL_S"; then echo "auxinput18_interval_s=${NL_AUXINPUT18_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_INTERVAL"; then echo "auxinput18_interval=${NL_AUXINPUT18_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_Y"; then echo "auxinput18_begin_y=${NL_AUXINPUT18_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_D"; then echo "auxinput18_begin_d=${NL_AUXINPUT18_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_H"; then echo "auxinput18_begin_h=${NL_AUXINPUT18_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_M"; then echo "auxinput18_begin_m=${NL_AUXINPUT18_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN_S"; then echo "auxinput18_begin_s=${NL_AUXINPUT18_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_BEGIN"; then echo "auxinput18_begin=${NL_AUXINPUT18_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_Y"; then echo "auxinput18_end_y=${NL_AUXINPUT18_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_D"; then echo "auxinput18_end_d=${NL_AUXINPUT18_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_H"; then echo "auxinput18_end_h=${NL_AUXINPUT18_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_M"; then echo "auxinput18_end_m=${NL_AUXINPUT18_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END_S"; then echo "auxinput18_end_s=${NL_AUXINPUT18_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT18_END"; then echo "auxinput18_end=${NL_AUXINPUT18_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT18"; then echo "io_form_auxinput18=${NL_IO_FORM_AUXINPUT18}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT18"; then echo "frames_per_auxinput18=${NL_FRAMES_PER_AUXINPUT18}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INNAME"; then echo "auxinput19_inname=\"${NL_AUXINPUT19_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_OUTNAME"; then echo "auxinput19_outname=\"${NL_AUXINPUT19_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_Y"; then echo "auxinput19_interval_y=${NL_AUXINPUT19_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_D"; then echo "auxinput19_interval_d=${NL_AUXINPUT19_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_H"; then echo "auxinput19_interval_h=${NL_AUXINPUT19_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_M"; then echo "auxinput19_interval_m=${NL_AUXINPUT19_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL_S"; then echo "auxinput19_interval_s=${NL_AUXINPUT19_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_INTERVAL"; then echo "auxinput19_interval=${NL_AUXINPUT19_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_Y"; then echo "auxinput19_begin_y=${NL_AUXINPUT19_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_D"; then echo "auxinput19_begin_d=${NL_AUXINPUT19_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_H"; then echo "auxinput19_begin_h=${NL_AUXINPUT19_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_M"; then echo "auxinput19_begin_m=${NL_AUXINPUT19_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN_S"; then echo "auxinput19_begin_s=${NL_AUXINPUT19_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_BEGIN"; then echo "auxinput19_begin=${NL_AUXINPUT19_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_Y"; then echo "auxinput19_end_y=${NL_AUXINPUT19_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_D"; then echo "auxinput19_end_d=${NL_AUXINPUT19_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_H"; then echo "auxinput19_end_h=${NL_AUXINPUT19_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_M"; then echo "auxinput19_end_m=${NL_AUXINPUT19_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END_S"; then echo "auxinput19_end_s=${NL_AUXINPUT19_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT19_END"; then echo "auxinput19_end=${NL_AUXINPUT19_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT19"; then echo "io_form_auxinput19=${NL_IO_FORM_AUXINPUT19}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT19"; then echo "frames_per_auxinput19=${NL_FRAMES_PER_AUXINPUT19}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INNAME"; then echo "auxinput20_inname=\"${NL_AUXINPUT20_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_OUTNAME"; then echo "auxinput20_outname=\"${NL_AUXINPUT20_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_Y"; then echo "auxinput20_interval_y=${NL_AUXINPUT20_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_D"; then echo "auxinput20_interval_d=${NL_AUXINPUT20_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_H"; then echo "auxinput20_interval_h=${NL_AUXINPUT20_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_M"; then echo "auxinput20_interval_m=${NL_AUXINPUT20_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL_S"; then echo "auxinput20_interval_s=${NL_AUXINPUT20_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_INTERVAL"; then echo "auxinput20_interval=${NL_AUXINPUT20_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_Y"; then echo "auxinput20_begin_y=${NL_AUXINPUT20_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_D"; then echo "auxinput20_begin_d=${NL_AUXINPUT20_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_H"; then echo "auxinput20_begin_h=${NL_AUXINPUT20_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_M"; then echo "auxinput20_begin_m=${NL_AUXINPUT20_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN_S"; then echo "auxinput20_begin_s=${NL_AUXINPUT20_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_BEGIN"; then echo "auxinput20_begin=${NL_AUXINPUT20_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_Y"; then echo "auxinput20_end_y=${NL_AUXINPUT20_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_D"; then echo "auxinput20_end_d=${NL_AUXINPUT20_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_H"; then echo "auxinput20_end_h=${NL_AUXINPUT20_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_M"; then echo "auxinput20_end_m=${NL_AUXINPUT20_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END_S"; then echo "auxinput20_end_s=${NL_AUXINPUT20_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT20_END"; then echo "auxinput20_end=${NL_AUXINPUT20_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT20"; then echo "io_form_auxinput20=${NL_IO_FORM_AUXINPUT20}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT20"; then echo "frames_per_auxinput20=${NL_FRAMES_PER_AUXINPUT20}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INNAME"; then echo "auxinput21_inname=\"${NL_AUXINPUT21_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_OUTNAME"; then echo "auxinput21_outname=\"${NL_AUXINPUT21_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_Y"; then echo "auxinput21_interval_y=${NL_AUXINPUT21_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_D"; then echo "auxinput21_interval_d=${NL_AUXINPUT21_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_H"; then echo "auxinput21_interval_h=${NL_AUXINPUT21_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_M"; then echo "auxinput21_interval_m=${NL_AUXINPUT21_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL_S"; then echo "auxinput21_interval_s=${NL_AUXINPUT21_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_INTERVAL"; then echo "auxinput21_interval=${NL_AUXINPUT21_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_Y"; then echo "auxinput21_begin_y=${NL_AUXINPUT21_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_D"; then echo "auxinput21_begin_d=${NL_AUXINPUT21_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_H"; then echo "auxinput21_begin_h=${NL_AUXINPUT21_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_M"; then echo "auxinput21_begin_m=${NL_AUXINPUT21_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN_S"; then echo "auxinput21_begin_s=${NL_AUXINPUT21_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_BEGIN"; then echo "auxinput21_begin=${NL_AUXINPUT21_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_Y"; then echo "auxinput21_end_y=${NL_AUXINPUT21_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_D"; then echo "auxinput21_end_d=${NL_AUXINPUT21_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_H"; then echo "auxinput21_end_h=${NL_AUXINPUT21_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_M"; then echo "auxinput21_end_m=${NL_AUXINPUT21_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END_S"; then echo "auxinput21_end_s=${NL_AUXINPUT21_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT21_END"; then echo "auxinput21_end=${NL_AUXINPUT21_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT21"; then echo "io_form_auxinput21=${NL_IO_FORM_AUXINPUT21}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT21"; then echo "frames_per_auxinput21=${NL_FRAMES_PER_AUXINPUT21}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INNAME"; then echo "auxinput22_inname=\"${NL_AUXINPUT22_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_OUTNAME"; then echo "auxinput22_outname=\"${NL_AUXINPUT22_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_Y"; then echo "auxinput22_interval_y=${NL_AUXINPUT22_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_D"; then echo "auxinput22_interval_d=${NL_AUXINPUT22_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_H"; then echo "auxinput22_interval_h=${NL_AUXINPUT22_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_M"; then echo "auxinput22_interval_m=${NL_AUXINPUT22_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL_S"; then echo "auxinput22_interval_s=${NL_AUXINPUT22_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_INTERVAL"; then echo "auxinput22_interval=${NL_AUXINPUT22_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_Y"; then echo "auxinput22_begin_y=${NL_AUXINPUT22_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_D"; then echo "auxinput22_begin_d=${NL_AUXINPUT22_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_H"; then echo "auxinput22_begin_h=${NL_AUXINPUT22_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_M"; then echo "auxinput22_begin_m=${NL_AUXINPUT22_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN_S"; then echo "auxinput22_begin_s=${NL_AUXINPUT22_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_BEGIN"; then echo "auxinput22_begin=${NL_AUXINPUT22_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_Y"; then echo "auxinput22_end_y=${NL_AUXINPUT22_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_D"; then echo "auxinput22_end_d=${NL_AUXINPUT22_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_H"; then echo "auxinput22_end_h=${NL_AUXINPUT22_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_M"; then echo "auxinput22_end_m=${NL_AUXINPUT22_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END_S"; then echo "auxinput22_end_s=${NL_AUXINPUT22_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT22_END"; then echo "auxinput22_end=${NL_AUXINPUT22_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT22"; then echo "io_form_auxinput22=${NL_IO_FORM_AUXINPUT22}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT22"; then echo "frames_per_auxinput22=${NL_FRAMES_PER_AUXINPUT22}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INNAME"; then echo "auxinput23_inname=\"${NL_AUXINPUT23_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_OUTNAME"; then echo "auxinput23_outname=\"${NL_AUXINPUT23_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_Y"; then echo "auxinput23_interval_y=${NL_AUXINPUT23_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_D"; then echo "auxinput23_interval_d=${NL_AUXINPUT23_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_H"; then echo "auxinput23_interval_h=${NL_AUXINPUT23_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_M"; then echo "auxinput23_interval_m=${NL_AUXINPUT23_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL_S"; then echo "auxinput23_interval_s=${NL_AUXINPUT23_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_INTERVAL"; then echo "auxinput23_interval=${NL_AUXINPUT23_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_Y"; then echo "auxinput23_begin_y=${NL_AUXINPUT23_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_D"; then echo "auxinput23_begin_d=${NL_AUXINPUT23_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_H"; then echo "auxinput23_begin_h=${NL_AUXINPUT23_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_M"; then echo "auxinput23_begin_m=${NL_AUXINPUT23_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN_S"; then echo "auxinput23_begin_s=${NL_AUXINPUT23_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_BEGIN"; then echo "auxinput23_begin=${NL_AUXINPUT23_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_Y"; then echo "auxinput23_end_y=${NL_AUXINPUT23_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_D"; then echo "auxinput23_end_d=${NL_AUXINPUT23_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_H"; then echo "auxinput23_end_h=${NL_AUXINPUT23_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_M"; then echo "auxinput23_end_m=${NL_AUXINPUT23_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END_S"; then echo "auxinput23_end_s=${NL_AUXINPUT23_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT23_END"; then echo "auxinput23_end=${NL_AUXINPUT23_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT23"; then echo "io_form_auxinput23=${NL_IO_FORM_AUXINPUT23}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT23"; then echo "frames_per_auxinput23=${NL_FRAMES_PER_AUXINPUT23}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INNAME"; then echo "auxinput24_inname=\"${NL_AUXINPUT24_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_OUTNAME"; then echo "auxinput24_outname=\"${NL_AUXINPUT24_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_Y"; then echo "auxinput24_interval_y=${NL_AUXINPUT24_INTERVAL_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_D"; then echo "auxinput24_interval_d=${NL_AUXINPUT24_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_H"; then echo "auxinput24_interval_h=${NL_AUXINPUT24_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_M"; then echo "auxinput24_interval_m=${NL_AUXINPUT24_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL_S"; then echo "auxinput24_interval_s=${NL_AUXINPUT24_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_INTERVAL"; then echo "auxinput24_interval=${NL_AUXINPUT24_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_Y"; then echo "auxinput24_begin_y=${NL_AUXINPUT24_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_D"; then echo "auxinput24_begin_d=${NL_AUXINPUT24_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_H"; then echo "auxinput24_begin_h=${NL_AUXINPUT24_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_M"; then echo "auxinput24_begin_m=${NL_AUXINPUT24_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN_S"; then echo "auxinput24_begin_s=${NL_AUXINPUT24_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_BEGIN"; then echo "auxinput24_begin=${NL_AUXINPUT24_BEGIN}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_Y"; then echo "auxinput24_end_y=${NL_AUXINPUT24_END_Y}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_D"; then echo "auxinput24_end_d=${NL_AUXINPUT24_END_D}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_H"; then echo "auxinput24_end_h=${NL_AUXINPUT24_END_H}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_M"; then echo "auxinput24_end_m=${NL_AUXINPUT24_END_M}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END_S"; then echo "auxinput24_end_s=${NL_AUXINPUT24_END_S}," >> $FILE;fi
if test ! -z "$NL_AUXINPUT24_END"; then echo "auxinput24_end=${NL_AUXINPUT24_END}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_AUXINPUT24"; then echo "io_form_auxinput24=${NL_IO_FORM_AUXINPUT24}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_AUXINPUT24"; then echo "frames_per_auxinput24=${NL_FRAMES_PER_AUXINPUT24}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL"; then echo "history_interval=${NL_HISTORY_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_FRAMES_PER_OUTFILE"; then echo "frames_per_outfile=${NL_FRAMES_PER_OUTFILE}," >> $FILE;fi
if test ! -z "$NL_RESTART"; then echo "restart=${NL_RESTART}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL"; then echo "restart_interval=${NL_RESTART_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_INPUT"; then echo "io_form_input=${NL_IO_FORM_INPUT}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_HISTORY"; then echo "io_form_history=${NL_IO_FORM_HISTORY}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_RESTART"; then echo "io_form_restart=${NL_IO_FORM_RESTART}," >> $FILE;fi
if test ! -z "$NL_IO_FORM_BOUNDARY"; then echo "io_form_boundary=${NL_IO_FORM_BOUNDARY}," >> $FILE;fi
if test ! -z "$NL_DEBUG_LEVEL"; then echo "debug_level=${NL_DEBUG_LEVEL}," >> $FILE;fi
if test ! -z "$NL_SELF_TEST_DOMAIN"; then echo "self_test_domain=${NL_SELF_TEST_DOMAIN}," >> $FILE;fi
if test ! -z "$NL_HISTORY_OUTNAME"; then echo "history_outname=\"${NL_HISTORY_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_HISTORY_INNAME"; then echo "history_inname=\"${NL_HISTORY_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_USE_NETCDF_CLASSIC"; then echo "use_netcdf_classic=${NL_USE_NETCDF_CLASSIC}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_D"; then echo "history_interval_d=${NL_HISTORY_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_H"; then echo "history_interval_h=${NL_HISTORY_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_M"; then echo "history_interval_m=${NL_HISTORY_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_HISTORY_INTERVAL_S"; then echo "history_interval_s=${NL_HISTORY_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_D"; then echo "inputout_interval_d=${NL_INPUTOUT_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_H"; then echo "inputout_interval_h=${NL_INPUTOUT_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_M"; then echo "inputout_interval_m=${NL_INPUTOUT_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL_S"; then echo "inputout_interval_s=${NL_INPUTOUT_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_INTERVAL"; then echo "inputout_interval=${NL_INPUTOUT_INTERVAL}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_D"; then echo "restart_interval_d=${NL_RESTART_INTERVAL_D}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_H"; then echo "restart_interval_h=${NL_RESTART_INTERVAL_H}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_M"; then echo "restart_interval_m=${NL_RESTART_INTERVAL_M}," >> $FILE;fi
if test ! -z "$NL_RESTART_INTERVAL_S"; then echo "restart_interval_s=${NL_RESTART_INTERVAL_S}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_Y"; then echo "history_begin_y=${NL_HISTORY_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_D"; then echo "history_begin_d=${NL_HISTORY_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_H"; then echo "history_begin_h=${NL_HISTORY_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_M"; then echo "history_begin_m=${NL_HISTORY_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN_S"; then echo "history_begin_s=${NL_HISTORY_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_HISTORY_BEGIN"; then echo "history_begin=${NL_HISTORY_BEGIN}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_Y"; then echo "inputout_begin_y=${NL_INPUTOUT_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_D"; then echo "inputout_begin_d=${NL_INPUTOUT_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_H"; then echo "inputout_begin_h=${NL_INPUTOUT_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_M"; then echo "inputout_begin_m=${NL_INPUTOUT_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_BEGIN_S"; then echo "inputout_begin_s=${NL_INPUTOUT_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_Y"; then echo "restart_begin_y=${NL_RESTART_BEGIN_Y}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_D"; then echo "restart_begin_d=${NL_RESTART_BEGIN_D}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_H"; then echo "restart_begin_h=${NL_RESTART_BEGIN_H}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_M"; then echo "restart_begin_m=${NL_RESTART_BEGIN_M}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN_S"; then echo "restart_begin_s=${NL_RESTART_BEGIN_S}," >> $FILE;fi
if test ! -z "$NL_RESTART_BEGIN"; then echo "restart_begin=${NL_RESTART_BEGIN}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_Y"; then echo "history_end_y=${NL_HISTORY_END_Y}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_D"; then echo "history_end_d=${NL_HISTORY_END_D}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_H"; then echo "history_end_h=${NL_HISTORY_END_H}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_M"; then echo "history_end_m=${NL_HISTORY_END_M}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END_S"; then echo "history_end_s=${NL_HISTORY_END_S}," >> $FILE;fi
if test ! -z "$NL_HISTORY_END"; then echo "history_end=${NL_HISTORY_END}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_Y"; then echo "inputout_end_y=${NL_INPUTOUT_END_Y}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_D"; then echo "inputout_end_d=${NL_INPUTOUT_END_D}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_H"; then echo "inputout_end_h=${NL_INPUTOUT_END_H}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_M"; then echo "inputout_end_m=${NL_INPUTOUT_END_M}," >> $FILE;fi
if test ! -z "$NL_INPUTOUT_END_S"; then echo "inputout_end_s=${NL_INPUTOUT_END_S}," >> $FILE;fi
if test ! -z "$NL_RESET_SIMULATION_START"; then echo "reset_simulation_start=${NL_RESET_SIMULATION_START}," >> $FILE;fi
if test ! -z "$NL_IOFIELDS_FILENAME"; then echo "iofields_filename=\"${NL_IOFIELDS_FILENAME}\"," >> $FILE;fi
if test ! -z "$NL_IGNORE_IOFIELDS_WARNING"; then echo "ignore_iofields_warning=${NL_IGNORE_IOFIELDS_WARNING}," >> $FILE;fi
if test ! -z "$NL_NCD_NOFILL"; then echo "ncd_nofill=${NL_NCD_NOFILL}," >> $FILE;fi
if test ! -z "$NL_JULYR"; then echo "julyr=${NL_JULYR}," >> $FILE;fi
if test ! -z "$NL_JULDAY"; then echo "julday=${NL_JULDAY}," >> $FILE;fi
if test ! -z "$NL_GMT"; then echo "gmt=${NL_GMT}," >> $FILE;fi
if test ! -z "$NL_HIGH_FREQ_OUTNAME"; then echo "high_freq_outname=\"${NL_HIGH_FREQ_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_PARTIAL_ATCF_OUTNAME"; then echo "partial_atcf_outname=\"${NL_PARTIAL_ATCF_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_INPUT_INNAME"; then echo "input_inname=\"${NL_INPUT_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_INPUT_OUTNAME"; then echo "input_outname=\"${NL_INPUT_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_BDY_INNAME"; then echo "bdy_inname=\"${NL_BDY_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_BDY_OUTNAME"; then echo "bdy_outname=\"${NL_BDY_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_RST_INNAME"; then echo "rst_inname=\"${NL_RST_INNAME}\"," >> $FILE;fi
if test ! -z "$NL_RST_OUTNAME"; then echo "rst_outname=\"${NL_RST_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_ANL_OUTNAME"; then echo "anl_outname=\"${NL_ANL_OUTNAME}\"," >> $FILE;fi
if test ! -z "$NL_WRITE_INPUT"; then echo "write_input=${NL_WRITE_INPUT}," >> $FILE;fi
if test ! -z "$NL_WRITE_RESTART_AT_0H"; then echo "write_restart_at_0h=${NL_WRITE_RESTART_AT_0H}," >> $FILE;fi
if test ! -z "$NL_WRITE_HIST_AT_0H_RST"; then echo "write_hist_at_0h_rst=${NL_WRITE_HIST_AT_0H_RST}," >> $FILE;fi
if test ! -z "$NL_ADJUST_OUTPUT_TIMES"; then echo "adjust_output_times=${NL_ADJUST_OUTPUT_TIMES}," >> $FILE;fi
if test ! -z "$NL_ADJUST_INPUT_TIMES"; then echo "adjust_input_times=${NL_ADJUST_INPUT_TIMES}," >> $FILE;fi
if test ! -z "$NL_TSTART"; then echo "tstart=${NL_TSTART}," >> $FILE;fi
if test ! -z "$NL_NOCOLONS"; then echo "nocolons=${NL_NOCOLONS}," >> $FILE;fi
if test ! -z "$NL_CYCLING"; then echo "cycling=${NL_CYCLING}," >> $FILE;fi
if test ! -z "$NL_OUTPUT_READY_FLAG"; then echo "output_ready_flag=${NL_OUTPUT_READY_FLAG}," >> $FILE;fi
echo / >> $FILE
echo \&noah_mp >> $FILE
if test ! -z "$NL_DVEG"; then echo "dveg=${NL_DVEG}," >> $FILE;fi
if test ! -z "$NL_OPT_CRS"; then echo "opt_crs=${NL_OPT_CRS}," >> $FILE;fi
if test ! -z "$NL_OPT_BTR"; then echo "opt_btr=${NL_OPT_BTR}," >> $FILE;fi
if test ! -z "$NL_OPT_RUN"; then echo "opt_run=${NL_OPT_RUN}," >> $FILE;fi
if test ! -z "$NL_OPT_SFC"; then echo "opt_sfc=${NL_OPT_SFC}," >> $FILE;fi
if test ! -z "$NL_OPT_FRZ"; then echo "opt_frz=${NL_OPT_FRZ}," >> $FILE;fi
if test ! -z "$NL_OPT_INF"; then echo "opt_inf=${NL_OPT_INF}," >> $FILE;fi
if test ! -z "$NL_OPT_RAD"; then echo "opt_rad=${NL_OPT_RAD}," >> $FILE;fi
if test ! -z "$NL_OPT_ALB"; then echo "opt_alb=${NL_OPT_ALB}," >> $FILE;fi
if test ! -z "$NL_OPT_SNF"; then echo "opt_snf=${NL_OPT_SNF}," >> $FILE;fi
if test ! -z "$NL_OPT_TBOT"; then echo "opt_tbot=${NL_OPT_TBOT}," >> $FILE;fi
if test ! -z "$NL_OPT_STC"; then echo "opt_stc=${NL_OPT_STC}," >> $FILE;fi
echo / >> $FILE
echo \&dfi_control >> $FILE
if test ! -z "$NL_DFI_OPT"; then echo "dfi_opt=${NL_DFI_OPT}," >> $FILE;fi
if test ! -z "$NL_DFI_SAVEHYDMETEORS"; then echo "dfi_savehydmeteors=${NL_DFI_SAVEHYDMETEORS}," >> $FILE;fi
if test ! -z "$NL_DFI_NFILTER"; then echo "dfi_nfilter=${NL_DFI_NFILTER}," >> $FILE;fi
if test ! -z "$NL_DFI_WRITE_FILTERED_INPUT"; then echo "dfi_write_filtered_input=${NL_DFI_WRITE_FILTERED_INPUT}," >> $FILE;fi
if test ! -z "$NL_DFI_WRITE_DFI_HISTORY"; then echo "dfi_write_dfi_history=${NL_DFI_WRITE_DFI_HISTORY}," >> $FILE;fi
if test ! -z "$NL_DFI_CUTOFF_SECONDS"; then echo "dfi_cutoff_seconds=${NL_DFI_CUTOFF_SECONDS}," >> $FILE;fi
if test ! -z "$NL_DFI_TIME_DIM"; then echo "dfi_time_dim=${NL_DFI_TIME_DIM}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_YEAR"; then echo "dfi_fwdstop_year=${NL_DFI_FWDSTOP_YEAR}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_MONTH"; then echo "dfi_fwdstop_month=${NL_DFI_FWDSTOP_MONTH}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_DAY"; then echo "dfi_fwdstop_day=${NL_DFI_FWDSTOP_DAY}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_HOUR"; then echo "dfi_fwdstop_hour=${NL_DFI_FWDSTOP_HOUR}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_MINUTE"; then echo "dfi_fwdstop_minute=${NL_DFI_FWDSTOP_MINUTE}," >> $FILE;fi
if test ! -z "$NL_DFI_FWDSTOP_SECOND"; then echo "dfi_fwdstop_second=${NL_DFI_FWDSTOP_SECOND}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_YEAR"; then echo "dfi_bckstop_year=${NL_DFI_BCKSTOP_YEAR}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_MONTH"; then echo "dfi_bckstop_month=${NL_DFI_BCKSTOP_MONTH}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_DAY"; then echo "dfi_bckstop_day=${NL_DFI_BCKSTOP_DAY}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_HOUR"; then echo "dfi_bckstop_hour=${NL_DFI_BCKSTOP_HOUR}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_MINUTE"; then echo "dfi_bckstop_minute=${NL_DFI_BCKSTOP_MINUTE}," >> $FILE;fi
if test ! -z "$NL_DFI_BCKSTOP_SECOND"; then echo "dfi_bckstop_second=${NL_DFI_BCKSTOP_SECOND}," >> $FILE;fi
echo / >> $FILE
echo \&dynamics >> $FILE
if test ! -z "$NL_DYN_OPT"; then echo "dyn_opt=${NL_DYN_OPT}," >> $FILE;fi
if test ! -z "$NL_RK_ORD"; then echo "rk_ord=${NL_RK_ORD}," >> $FILE;fi
if test ! -z "$NL_W_DAMPING"; then echo "w_damping=${NL_W_DAMPING}," >> $FILE;fi
if test ! -z "$NL_DIFF_OPT"; then echo "diff_opt=${NL_DIFF_OPT}," >> $FILE;fi
if test ! -z "$NL_KM_OPT"; then echo "km_opt=${NL_KM_OPT}," >> $FILE;fi
if test ! -z "$NL_DAMP_OPT"; then echo "damp_opt=${NL_DAMP_OPT}," >> $FILE;fi
if test ! -z "$NL_ZDAMP"; then echo "zdamp=${NL_ZDAMP}," >> $FILE;fi
if test ! -z "$NL_BASE_PRES"; then echo "base_pres=${NL_BASE_PRES}," >> $FILE;fi
if test ! -z "$NL_BASE_TEMP"; then echo "base_temp=${NL_BASE_TEMP}," >> $FILE;fi
if test ! -z "$NL_BASE_LAPSE"; then echo "base_lapse=${NL_BASE_LAPSE}," >> $FILE;fi
if test ! -z "$NL_ISO_TEMP"; then echo "iso_temp=${NL_ISO_TEMP}," >> $FILE;fi
if test ! -z "$NL_DAMPCOEF"; then echo "dampcoef=${NL_DAMPCOEF}," >> $FILE;fi
if test ! -z "$NL_KHDIF"; then echo "khdif=${NL_KHDIF}," >> $FILE;fi
if test ! -z "$NL_KVDIF"; then echo "kvdif=${NL_KVDIF}," >> $FILE;fi
if test ! -z "$NL_C_S"; then echo "c_s=${NL_C_S}," >> $FILE;fi
if test ! -z "$NL_C_K"; then echo "c_k=${NL_C_K}," >> $FILE;fi
if test ! -z "$NL_SMDIV"; then echo "smdiv=${NL_SMDIV}," >> $FILE;fi
if test ! -z "$NL_EMDIV"; then echo "emdiv=${NL_EMDIV}," >> $FILE;fi
if test ! -z "$NL_EPSSM"; then echo "epssm=${NL_EPSSM}," >> $FILE;fi
if test ! -z "$NL_NON_HYDROSTATIC"; then echo "non_hydrostatic=${NL_NON_HYDROSTATIC}," >> $FILE;fi
if test ! -z "$NL_TIME_STEP_SOUND"; then echo "time_step_sound=${NL_TIME_STEP_SOUND}," >> $FILE;fi
if test ! -z "$NL_H_MOM_ADV_ORDER"; then echo "h_mom_adv_order=${NL_H_MOM_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_V_MOM_ADV_ORDER"; then echo "v_mom_adv_order=${NL_V_MOM_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_H_SCA_ADV_ORDER"; then echo "h_sca_adv_order=${NL_H_SCA_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_V_SCA_ADV_ORDER"; then echo "v_sca_adv_order=${NL_V_SCA_ADV_ORDER}," >> $FILE;fi
if test ! -z "$NL_TOP_RADIATION"; then echo "top_radiation=${NL_TOP_RADIATION}," >> $FILE;fi
if test ! -z "$NL_TKE_UPPER_BOUND"; then echo "tke_upper_bound=${NL_TKE_UPPER_BOUND}," >> $FILE;fi
if test ! -z "$NL_TKE_DRAG_COEFFICIENT"; then echo "tke_drag_coefficient=${NL_TKE_DRAG_COEFFICIENT}," >> $FILE;fi
if test ! -z "$NL_TKE_HEAT_FLUX"; then echo "tke_heat_flux=${NL_TKE_HEAT_FLUX}," >> $FILE;fi
if test ! -z "$NL_PERT_CORIOLIS"; then echo "pert_coriolis=${NL_PERT_CORIOLIS}," >> $FILE;fi
if test ! -z "$NL_EULER_ADV"; then echo "euler_adv=${NL_EULER_ADV}," >> $FILE;fi
if test ! -z "$NL_IDTADT"; then echo "idtadt=${NL_IDTADT}," >> $FILE;fi
if test ! -z "$NL_IDTADC"; then echo "idtadc=${NL_IDTADC}," >> $FILE;fi
if test ! -z "$NL_CODAMP"; then echo "codamp=${NL_CODAMP}," >> $FILE;fi
if test ! -z "$NL_COAC"; then echo "coac=${NL_COAC}," >> $FILE;fi
if test ! -z "$NL_SLOPHC"; then echo "slophc=${NL_SLOPHC}," >> $FILE;fi
if test ! -z "$NL_WP"; then echo "wp=${NL_WP}," >> $FILE;fi
if test ! -z "$NL_TERRAIN_SMOOTHING"; then echo "terrain_smoothing=${NL_TERRAIN_SMOOTHING}," >> $FILE;fi
echo / >> $FILE
echo \&bdy_control >> $FILE
if test ! -z "$NL_SPEC_BDY_WIDTH"; then echo "spec_bdy_width=${NL_SPEC_BDY_WIDTH}," >> $FILE;fi
if test ! -z "$NL_SPEC_ZONE"; then echo "spec_zone=${NL_SPEC_ZONE}," >> $FILE;fi
if test ! -z "$NL_RELAX_ZONE"; then echo "relax_zone=${NL_RELAX_ZONE}," >> $FILE;fi
if test ! -z "$NL_SPECIFIED"; then echo "specified=${NL_SPECIFIED}," >> $FILE;fi
if test ! -z "$NL_PERIODIC_X"; then echo "periodic_x=${NL_PERIODIC_X}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_XS"; then echo "symmetric_xs=${NL_SYMMETRIC_XS}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_XE"; then echo "symmetric_xe=${NL_SYMMETRIC_XE}," >> $FILE;fi
if test ! -z "$NL_OPEN_XS"; then echo "open_xs=${NL_OPEN_XS}," >> $FILE;fi
if test ! -z "$NL_OPEN_XE"; then echo "open_xe=${NL_OPEN_XE}," >> $FILE;fi
if test ! -z "$NL_PERIODIC_Y"; then echo "periodic_y=${NL_PERIODIC_Y}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_YS"; then echo "symmetric_ys=${NL_SYMMETRIC_YS}," >> $FILE;fi
if test ! -z "$NL_SYMMETRIC_YE"; then echo "symmetric_ye=${NL_SYMMETRIC_YE}," >> $FILE;fi
if test ! -z "$NL_OPEN_YS"; then echo "open_ys=${NL_OPEN_YS}," >> $FILE;fi
if test ! -z "$NL_OPEN_YE"; then echo "open_ye=${NL_OPEN_YE}," >> $FILE;fi
if test ! -z "$NL_POLAR"; then echo "polar=${NL_POLAR}," >> $FILE;fi
if test ! -z "$NL_NESTED"; then echo "nested=${NL_NESTED}," >> $FILE;fi
if test ! -z "$NL_REAL_DATA_INIT_TYPE"; then echo "real_data_init_type=${NL_REAL_DATA_INIT_TYPE}," >> $FILE;fi
echo / >> $FILE
echo \&grib2 >> $FILE
if test ! -z "$NL_BACKGROUND_PROC_ID"; then echo "background_proc_id=${NL_BACKGROUND_PROC_ID}," >> $FILE;fi
if test ! -z "$NL_FORECAST_PROC_ID"; then echo "forecast_proc_id=${NL_FORECAST_PROC_ID}," >> $FILE;fi
if test ! -z "$NL_PRODUCTION_STATUS"; then echo "production_status=${NL_PRODUCTION_STATUS}," >> $FILE;fi
if test ! -z "$NL_COMPRESSION"; then echo "compression=${NL_COMPRESSION}," >> $FILE;fi
echo / >> $FILE
echo \&namelist_quilt >> $FILE
if test ! -z "$NL_NIO_TASKS_PER_GROUP"; then echo "nio_tasks_per_group=${NL_NIO_TASKS_PER_GROUP}," >> $FILE;fi
if test ! -z "$NL_NIO_GROUPS"; then echo "nio_groups=${NL_NIO_GROUPS}," >> $FILE;fi
echo / >> $FILE
